{"version":3,"sources":["n3-MySuperComponents/SuperInputText/SuperInputText.module.css","n3-MySuperComponents/SuperModal/SuperModal.module.scss","n1-main/a3-dal/mainAPI.ts","n1-main/a2-bll/store/cardPacksReducer.ts","n1-main/a2-bll/store/appReducer.ts","n1-main/a2-bll/store/mainAuthReducer.ts","n2-features/b6-profile/Profile.tsx","n2-features/b4-errors/error/Error.tsx","n2-features/b3-pass/Password/RenewalPass.tsx","n3-MySuperComponents/SuperButton/SuperButton.tsx","n3-MySuperComponents/SuperInputText/SuperInputText.tsx","n3-MySuperComponents/SuperCheckbox/SuperCheckbox.tsx","n1-main/a1-ui/loading/Loading.tsx","n2-features/b2-auth/sign-in-up/SignIn.tsx","n2-features/b2-auth/sign-in-up/SignUp.tsx","n2-features/b3-pass/Password/NewPass.tsx","n2-features/b6-profile/UpdateProfile.tsx","n1-main/a3-dal/GradeAPI.ts","n1-main/a2-bll/store/cardsReducer.ts","n3-MySuperComponents/SuperPaginator/SuperPaginator.tsx","n3-MySuperComponents/SuperModal/SuperModal.tsx","n2-features/b5-cardsPack/Cards/UpdateCard.tsx","n2-features/b5-cardsPack/Cards/Card.tsx","n2-features/b7-learn/SmartLearn.tsx","n2-features/b5-cardsPack/Cards/CreateCard.tsx","n2-features/b5-cardsPack/Cards/DeletePack.tsx","n2-features/b5-cardsPack/Cards/RenameCardPack.tsx","n2-features/b5-cardsPack/Cards/CardsControl.tsx","n2-features/b5-cardsPack/Cards/Cards.tsx","n2-features/b5-cardsPack/cardsPacksPage/CardsPack.tsx","n2-features/b5-cardsPack/cardsPacksPage/CreateCardsPack.tsx","n2-features/b5-cardsPack/cardsPacksPage/SearchPack.tsx","n2-features/b5-cardsPack/cardsPacksPage/CardsPacksControl.tsx","n2-features/b5-cardsPack/cardsPacksPage/CardPacksPage.tsx","n1-main/a1-ui/routes/Routes.tsx","n2-features/b2-auth/sign-in-up/Logout.tsx","n1-main/a1-ui/header/Header.tsx","n1-main/a1-ui/App.tsx","reportWebVitals.ts","n1-main/a2-bll/store/store.ts","index.tsx","n2-features/b2-auth/sign-in-up/SignIn.module.css","n1-main/a1-ui/header/Header.module.css","n2-features/b5-cardsPack/Cards/Cards.module.scss","n3-MySuperComponents/SuperPaginator/SuperPaginator.module.scss","utils/styles/CommonStylesForAuth.module.css","n2-features/b6-profile/Profile.module.css","n2-features/b5-cardsPack/cardsPacksPage/CardsPacks.module.scss","n3-MySuperComponents/SuperButton/SuperButton.module.css","n3-MySuperComponents/SuperCheckbox/SuperCheckbox.module.css","n1-main/a1-ui/loading/Loading.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","data","delete","put","message","resetPasswordToken","cardsPacksAPI","getModule","get","name","cardsPack","idPack","id","_id","cardsAPI","getCardsModule","createModule","updateModule","cardId","getPackCards","createAsyncThunk","getPacksData","thunkAPI","a","getState","auth","cardPacks","params","pageCount","sortPacks","sortCardsPacks","page","newPageForShow","min","minCardsCount","max","maxCardsCount","showMyCardsPacks","user_id","user","dispatch","switchLoadingState","valueInLoading","res","getCardPacks","newState","error","console","log","setCommonRegister","removeCardPack","removePackData","deletedPack","deleted","createCardPack","createData","newName","updateCardPack","updateData","newTitle","slice","createSlice","initialState","cardPacksTotalCount","currentPortionToPaginator","packDeleted","reducers","state","action","payload","isShow","changeNewPageForShowPacks","newShowPage","changePortionPacks","currentPortion","changeMaxMinCards","newValue","changeSort","cardPacksReducer","reducer","actions","isInitializedTC","param","logIn","value","setUser","stateInitialized","isInitialized","loadingProgress","extraReducers","builder","addCase","fulfilled","appReducer","signUp","registsData","addedUser","switchIsRegister","newValueIsRegister","login","loginData","thunAPI","logout","logoutData","info","getUser","getUserData","avatar","updateUserInfo","updateUserData","setUpdateUser","forgot","fogotData","switchFogot","newFogot","newPassword","newPasswordData","setNewPassword","isUpPassword","isLogged","isRegister","commonError","isUpdatedPassword","fogot","updatedUser","authReducer","Profile","useDispatch","userName","useSelector","userEmail","userAvatar","useEffect","className","s","root","CardActionArea","CardMedia","media","image","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","to","PATH","SIGN_IN","Error","RenewalPass","formik","useFormik","initialValues","validate","values","errors","test","onSubmit","resetForm","styles","authBlock","handleSubmit","inputBlock","TextField","placeholder","fullWidth","onChange","handleChange","type","style","SuperButton","red","restProps","finalClassName","default","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","margin","required","label","e","currentTarget","key","SuperCheckbox","onChangeChecked","children","finalInputClassName","checkbox","FormControlLabel","control","Checkbox","checked","Loading","loadPage","loader","SignInWithFormik","length","PROFILE","Container","maxWidth","paper","avatarConatiner","Avatar","typographyContainer","form","noValidate","getFieldProps","touched","Grid","container","item","xs","RENEWAL_PASS","SIGN_UP","SignUp","confPass","NewPass","token","useParams","UpdateProfile","oldName","oldAva","useState","setNewName","setNewAva","newData","updateProfile","onClick","gradeAPI","grade","card_id","getCardsForCardsPack","cards","cardsPack_id","packID","moduleToLearn","cardsTotalCount","learnMode","getCards","response","createCard","createCardData","card","cardsPackId","question","answer","deleteCard","deleteData","idCard","updateCard","cardsToLearn","maxGrade","minGrade","packUserId","updatedGrade","shots","changeNewPageForShowCards","changePortionCards","switchLearnMode","cardsReducer","SuperPaginator","props","Math","ceil","totalItemsCount","pageSize","i","push","portionCount","portionSize","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","paginatorBody","disabled","buttons","filter","p","map","pageStyle","currentPage","pageActive","numberPageStyle","onClickToPage","SuperModal","open","setOpen","nameButton","Modal","onClose","aria-labelledby","aria-describedby","modal","body","UpdateCard","display","flexDirection","justifyContent","height","width","submitForm","Card","align","created","updated","userId","packId","delCard","rand","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","position","backgroundColor","border","boxShadow","shadows","padding","spacing","SmartLearn","classes","React","modalStyle","handleClose","numQA","setNumQA","countA","setCountA","show","setShow","randomQ","setRandomQ","getAllQuestion","getAllRandomQuestion","getAllAnswers","getIdOfQuestion","out","el","j","startAgain","newGradesForQuestions","then","getGradeTC","floor","CreateCard","DeleteCardPack","alignItems","RenameCardPack","newNameCardsPack","namePack","CardsControl","controlBlock","buttonBlock","userControl","disLearn","backToPreviousPage","Cards","app","cardsState","NamePack","find","history","useHistory","PACKS","cardsBlock","cellPadding","c","CardsPack","cardsCount","CreateCardsPack","newCardPack","useCallback","NameNewCardsPack","SearchPack","minValue","minCount","maxValue","maxCount","changeMaxMinRange","Slider","event","setValue","valueLabelDisplay","getAriaValueText","CardsPacksControl","minCCount","maxCcount","searchBlock","cangeMaxMinRange","showMyCardPacks","CardPacksPage","cardPacksState","updateTitle","delPack","setChecked","changeSortCardsPacks","cardsPacksBlock","newIsDoneValue","NEW_PASS","ERROR","UPDATE_USER","CARDS","PACKS_RAW","QUIZ","Routes","path","exact","render","from","Logout","logoutHandler","Header","nav","replace","headerLink","activeClassName","activeLink","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a85f5945.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1v9gu\",\"errorInput\":\"SuperInputText_errorInput__hdBbv\",\"error\":\"SuperInputText_error__h1p0E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SuperModal_modal__2No9e\"};","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<ResponseType<{ body: loginResponseType }>>(\"auth/login\", {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n        })\r\n    },\r\n    getProfile() {\r\n        return instance.post<userType>(\"auth/me\")\r\n    },\r\n    signUp(data: signUpDataType) {\r\n        return instance.post<signUpResponseType>(\"auth/register\", data)\r\n    },\r\n    logout() {\r\n        return instance.delete<logoutResponseType>(\"auth/me\")\r\n    },\r\n    updateUser(data: NewUserType) {\r\n        return instance.put<updatedUserResponseType>(\"auth/me\", data)\r\n    },\r\n    forgot(email: string, message: string) {\r\n        return instance.post<SendNewPassResponseType>(\"auth/forgot\", { email, message })\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<SendNewPassResponseType>(\"auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken,\r\n        })\r\n    },\r\n}\r\nexport const cardsPacksAPI = {\r\n    getCardsPacks(getModule: GetCardsPacksModuleType) {\r\n        return instance.get<ResponseGetCardPacksType>(`cards/pack`, getModule)\r\n    },\r\n    createCardsPack(name: string) {\r\n        return instance.post<CreateCardsPackResponceType>(`cards/pack`, {\r\n            cardsPack: { name: name },\r\n        })\r\n    },\r\n    deleteCardsPack(idPack: string) {\r\n        return instance.delete<DeleteCardPackResponceType>(`cards/pack/?id=${idPack}`)\r\n    },\r\n    updateCardsPack(id: string, name: string) {\r\n        return instance.put<UpdateCardsPackResponceType>(`cards/pack`, {\r\n            cardsPack: { _id: id, name: name },\r\n        })\r\n    },\r\n    updateGrade(card_id: string, grade: number) {\r\n        return instance.put<CardType>(\"cards/grade\", { card_id, grade })\r\n    },\r\n}\r\nexport const cardsAPI = {\r\n    getCards(getCardsModule: GetCardsModuleType) {\r\n        return instance.get<GetCardsResponceType>(`cards/card`, getCardsModule)\r\n    },\r\n    createCard(createModule: CreateCardModuleType) {\r\n        return instance.post<CreateCardResponceType>(\"cards/card\", createModule)\r\n    },\r\n    updateCard(updateModule: UpdateCardModuleType) {\r\n        return instance.put<UpdateCardResponceType>(\"cards/card\", updateModule)\r\n    },\r\n    deleteCard(cardId: string) {\r\n        return instance.delete<DeleteCardResponceType>(`cards/card?id=${cardId}`)\r\n    },\r\n}\r\n\r\n\r\n\r\nexport type GetCardsModuleType = {\r\n    params: {\r\n        cardsPack_id: string\r\n        min?: number\r\n        max?: number\r\n        sortCards?: \"0grade\"\r\n        page?: number\r\n        pageCount?: number\r\n    }\r\n}\r\nexport type CardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    shots: number\r\n    user_id: string\r\n    card_id: string\r\n}\r\nexport type GetCardsPacksModuleType = {\r\n    params: {\r\n        min?: number\r\n        max?: number\r\n        sortPacks?: \"0updated\" | \"1updated\" | \"0cardsCount\" | \"1cardsCount\"\r\n        page?: number\r\n        pageCount?: number\r\n        user_id?: string\r\n    }\r\n}\r\nexport type CreateCardResponceType = {\r\n    newCard: {}\r\n}\r\nexport type UpdateCardResponceType = {\r\n    updateCard: {}\r\n}\r\nexport type DeleteCardResponceType = {\r\n    deleteCard: {}\r\n}\r\nexport type CreateCardsPackResponceType = {\r\n    newCardsPack: {}\r\n}\r\nexport type UpdateCardsPackResponceType = {\r\n    updateCardsPack: {}\r\n}\r\nexport type DeleteCardPackResponceType = {\r\n    deleteCardsPack: {}\r\n}\r\nexport type CardsType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    shots: number\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    _id: string\r\n}\r\nexport type GetCardsResponceType = {\r\n    cards: Array<CardsType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\nexport type CreateCardModuleType = {\r\n    card: {\r\n        cardsPack_id: string\r\n        question: string\r\n        answer: string\r\n        grade?: number\r\n        shots?: number\r\n        answerImg?: string\r\n        questionImg?: string\r\n        questionVideo?: string\r\n        answerVideo?: string\r\n        _id: string\r\n    }\r\n}\r\nexport type UpdateCardModuleType = {\r\n    card: {\r\n        _id: string\r\n        question?: string\r\n        answer?: string\r\n    }\r\n}\r\nexport type createCardPackType = {\r\n    name: string\r\n    private: boolean\r\n}\r\nexport type initCardPacks = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    created?: string\r\n    updated?: string\r\n}\r\nexport type ResponseGetCardPacksType = {\r\n    cardPacks: Array<initCardPacks>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\nexport type CardPackType = {\r\n    packName: string\r\n    min: number\r\n    max: number\r\n    sortPacks: number | string\r\n    page: number\r\n    pageCount: number\r\n    user_id: string\r\n}\r\nexport type NewUserType = {\r\n    name: string\r\n    avatar: string\r\n}\r\ntype updatedUserResponseType = {\r\n    updatedUser: {}\r\n    error?: string\r\n}\r\ntype logoutResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\ntype SendNewPassResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\ntype signUpResponseType = {\r\n    addedUser: {}\r\n    error?: string\r\n}\r\ntype signUpDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type LoginType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n}\r\nexport type SignInType<T = {}> = {\r\n    data: signUpDataType\r\n    rememberMe: boolean\r\n}\r\nexport type userType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    error?: string\r\n}\r\nexport type ResponseType<T = {}> = {\r\n    error?: string\r\n    body: loginResponseType\r\n}\r\ntype loginResponseType = {\r\n    data: userType\r\n    created: any\r\n    updated: any\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n}\r\n","import {\r\n    cardsPacksAPI,\r\n    GetCardsPacksModuleType,\r\n    initCardPacks,\r\n    ResponseGetCardPacksType,\r\n} from \"../../a3-dal/mainAPI\"\r\nimport { AuthInitStateType, setCommonRegister } from \"./mainAuthReducer\"\r\nimport { switchLoadingState } from \"./appReducer\"\r\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\n\r\nexport type initCardsPacksStateType = {\r\n    cardPacks: Array<initCardPacks>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    showMyCardsPacks: boolean\r\n    newPageForShow: number\r\n    currentPortionToPaginator: number\r\n    sortCardsPacks: \"0updated\" | \"1updated\" | \"0cardsCount\" | \"1cardsCount\"\r\n    packDeleted: boolean\r\n}\r\nconst cardPacksInitialState: initCardsPacksStateType = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: 10000,\r\n    minCardsCount: 0,\r\n    page: 0,\r\n    pageCount: 10,\r\n    showMyCardsPacks: false,\r\n    newPageForShow: 1,\r\n    currentPortionToPaginator: 1,\r\n    sortCardsPacks: \"0cardsCount\",\r\n    packDeleted: false,\r\n}\r\nexport const getPackCards = createAsyncThunk(\"cardPacks/get\", async (getPacksData, thunkAPI) => {\r\n    const { auth } = thunkAPI.getState() as { auth: AuthInitStateType }\r\n    const { cardPacks } = thunkAPI.getState() as { cardPacks: initCardsPacksStateType }\r\n\r\n    const module: GetCardsPacksModuleType = {\r\n        params: {\r\n            pageCount: cardPacks.pageCount,\r\n            sortPacks: cardPacks.sortCardsPacks,\r\n            page: cardPacks.newPageForShow,\r\n            min: cardPacks.minCardsCount,\r\n            max: cardPacks.maxCardsCount,\r\n        },\r\n    }\r\n\r\n    if (cardPacks.showMyCardsPacks) {\r\n        module.params.user_id = auth.user._id\r\n    } else {\r\n        module.params.user_id = \"\"\r\n    }\r\n\r\n    thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n    try {\r\n        const res = await cardsPacksAPI.getCardsPacks(module)\r\n        thunkAPI.dispatch(getCardPacks({ newState: res.data }))\r\n    } catch (e) {\r\n        const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n        console.log(\"Error:\", { ...e })\r\n        thunkAPI.dispatch(setCommonRegister(error))\r\n    } finally {\r\n        thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n    }\r\n})\r\nexport const removeCardPack = createAsyncThunk(\r\n    \"cardPacks/removeCardPack\",\r\n    async (removePackData: { idPack: string }, thunkAPI) => {\r\n        thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n        try {\r\n            await cardsPacksAPI.deleteCardsPack(removePackData.idPack)\r\n            thunkAPI.dispatch(deletedPack({ deleted: true }))\r\n            thunkAPI.dispatch(getPackCards())\r\n            thunkAPI.dispatch(deletedPack({ deleted: false }))\r\n        } catch (e) {\r\n            const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n            console.log(\"Error:\", { ...e })\r\n            thunkAPI.dispatch(setCommonRegister(error))\r\n        } finally{\r\n            thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n        }\r\n        \r\n    }\r\n)\r\nexport const createCardPack = createAsyncThunk(\r\n    \"cardPacks/setNewCardPack\",\r\n    async (createData: { newName: string }, thunkAPI) => {\r\n        thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n        try {\r\n            await cardsPacksAPI.createCardsPack(createData.newName)\r\n            await thunkAPI.dispatch(getPackCards())\r\n        } catch (e) {\r\n            const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n            console.log(\"Error:\", { ...e })\r\n        } finally{\r\n            thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n        }\r\n        \r\n    }\r\n)\r\nexport const updateCardPack = createAsyncThunk(\r\n    \"cardPacks/update\",\r\n    async (updateData: { idPack: string; newTitle: string }, thunkAPI) => {\r\n        thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n        try {\r\n            await cardsPacksAPI.updateCardsPack(updateData.idPack, updateData.newTitle)\r\n            thunkAPI.dispatch(getPackCards())\r\n        } catch (e) {\r\n            const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n            console.log(\"Error:\", { ...e })\r\n        } finally{\r\n            thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n        }\r\n        \r\n    }\r\n)\r\n\r\nconst slice = createSlice({\r\n    name: \"cardPacks\",\r\n    initialState: cardPacksInitialState,\r\n    reducers: {\r\n        getCardPacks(state, action: PayloadAction<{ newState: ResponseGetCardPacksType }>) {\r\n            state.cardPacks = action.payload.newState.cardPacks\r\n            state.cardPacksTotalCount = action.payload.newState.cardPacksTotalCount\r\n            state.maxCardsCount = action.payload.newState.maxCardsCount\r\n            state.minCardsCount = action.payload.newState.minCardsCount\r\n            state.page = action.payload.newState.page\r\n            state.pageCount = action.payload.newState.pageCount\r\n        },\r\n        showMyCardsPacks(state, action: PayloadAction<{ isShow: boolean }>) {\r\n            state.showMyCardsPacks = action.payload.isShow\r\n        },\r\n        changeNewPageForShowPacks(state, action: PayloadAction<{ newShowPage: number }>) {\r\n            state.newPageForShow = action.payload.newShowPage\r\n        },\r\n        changePortionPacks(state, action: PayloadAction<{ currentPortion: number }>) {\r\n            state.currentPortionToPaginator = action.payload.currentPortion\r\n        },\r\n        changeMaxMinCards(state, action: PayloadAction<{ newValue: number[] }>) {\r\n            state.minCardsCount = action.payload.newValue[0]\r\n            state.maxCardsCount = action.payload.newValue[1]\r\n        },\r\n        changeSort(\r\n            state,\r\n            action: PayloadAction<{\r\n                newValue: \"0updated\" | \"1updated\" | \"0cardsCount\" | \"1cardsCount\"\r\n            }>\r\n        ) {\r\n            state.sortCardsPacks = action.payload.newValue\r\n        },\r\n        deletedPack(state, action: PayloadAction<{ deleted: boolean }>) {\r\n            state.packDeleted = action.payload.deleted\r\n        },\r\n    },\r\n})\r\n\r\nexport const cardPacksReducer = slice.reducer\r\nexport const {\r\n    getCardPacks,\r\n    showMyCardsPacks,\r\n    changeNewPageForShowPacks,\r\n    changePortionPacks,\r\n    changeMaxMinCards,\r\n    changeSort,\r\n    deletedPack,\r\n} = slice.actions\r\n","import { FormatColorResetRounded } from \"@material-ui/icons\"\r\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { authAPI } from \"../../a3-dal/mainAPI\"\r\nimport { getPackCards } from \"./cardPacksReducer\"\r\nimport { logIn, setUser } from \"./mainAuthReducer\"\r\n\r\ntype LoadingProgressType = \"loading\" | \"successed\"\r\ntype AppReducerStateType = {\r\n    isInitialized: boolean\r\n    loadingProgress: LoadingProgressType\r\n}\r\nconst appReducerState: AppReducerStateType = {\r\n    isInitialized: false,\r\n    loadingProgress: \"successed\",\r\n}\r\nexport const isInitializedTC = createAsyncThunk(\"app/isInitialized\", async (param, thunkAPI) => {\r\n    thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n    try {\r\n        const res = await authAPI.getProfile()\r\n        if (!res.data.error) {\r\n            const user = res.data\r\n            await thunkAPI.dispatch(getPackCards())\r\n            thunkAPI.dispatch(logIn({ value: true }))\r\n            thunkAPI.dispatch(setUser({ user }))\r\n        } else {\r\n            thunkAPI.dispatch(logIn({ value: false }))\r\n        }\r\n        thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n    } catch {}\r\n    return { stateInitialized: true }\r\n})\r\n\r\nconst slice = createSlice({\r\n    name: \"app\",\r\n    initialState: appReducerState,\r\n    reducers: {\r\n        switchLoadingState(state, action: PayloadAction<{ valueInLoading: LoadingProgressType }>) {\r\n            state.loadingProgress = action.payload.valueInLoading\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(isInitializedTC.fulfilled, (state, action) => {\r\n            if (action.payload?.stateInitialized) {\r\n                state.isInitialized = action.payload?.stateInitialized\r\n            }\r\n        })\r\n    },\r\n})\r\n\r\nexport const appReducer = slice.reducer\r\nexport const { switchLoadingState } = slice.actions\r\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { authAPI, NewUserType, userType } from \"../../a3-dal/mainAPI\"\r\nimport { switchLoadingState } from \"./appReducer\"\r\n\r\nexport type AuthInitStateType = {\r\n    isLogged: boolean\r\n    user: userType\r\n    isRegister: boolean\r\n    commonError: string\r\n    isUpdatedPassword: boolean\r\n    fogot: boolean\r\n    updatedUser: NewUserType\r\n}\r\nconst authInitialState: AuthInitStateType = {\r\n    isLogged: false,\r\n    user: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: \"\",\r\n    },\r\n    isRegister: false,\r\n    commonError: \"\",\r\n    isUpdatedPassword: false,\r\n    fogot: false,\r\n    updatedUser: {\r\n        name: \"\",\r\n        avatar: \"\",\r\n    },\r\n}\r\n//\r\nexport const signUp = createAsyncThunk(\r\n    \"auth/signUp\",\r\n    async (registsData: { email: string; password: string }, thunkAPI) => {\r\n        debugger\r\n        try {\r\n            const res = await authAPI.signUp(registsData)\r\n            if (res.data.addedUser) {\r\n                thunkAPI.dispatch(switchIsRegister({ newValueIsRegister: true }))\r\n            } else {\r\n                thunkAPI.dispatch(setCommonRegister({ error: res.data.error }))\r\n            }\r\n        } catch (e) {\r\n            const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n            console.log(\"Error:\", { ...e })\r\n            thunkAPI.dispatch(setCommonRegister(error))\r\n        }\r\n    }\r\n)\r\nexport const login = createAsyncThunk(\r\n    \"auth/login\",\r\n    async (loginData: { email: string; password: string; rememberMe: boolean }, thunAPI) => {\r\n        thunAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n        try {\r\n            await authAPI.login(loginData.email, loginData.password, loginData.rememberMe)\r\n            thunAPI.dispatch(logIn({ value: true }))\r\n        } catch (e) {\r\n            const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n            console.log(\"Error:\", { ...e })\r\n            thunAPI.dispatch(setCommonRegister({ error: error }))\r\n        }\r\n        thunAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n    }\r\n)\r\nexport const logout = createAsyncThunk(\"auth/logout\", async (logoutData, thunAPI) => {\r\n    thunAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n    try {\r\n        const res = await authAPI.logout()\r\n        if (res.data.info) {\r\n            thunAPI.dispatch(logIn({ value: false }))\r\n        }\r\n    } catch (e) {\r\n        const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n        console.log(\"Error:\", { ...e })\r\n        thunAPI.dispatch(setCommonRegister({ error: error }))\r\n    }\r\n    thunAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n})\r\nexport const getUser = createAsyncThunk(\"auth/getUser\", async (getUserData, thunAPI) => {\r\n    const res = await authAPI.getProfile()\r\n    let { _id, email, name, avatar } = res.data\r\n    thunAPI.dispatch(setUser({ user: { _id, email, name, avatar } }))\r\n})\r\nexport const updateUserInfo = createAsyncThunk(\r\n    \"auth/updateUser\",\r\n    async (updateUserData: { data: NewUserType }, thunkAPI) => {\r\n        thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n        try {\r\n            await authAPI.updateUser(updateUserData.data)\r\n            thunkAPI.dispatch(setUpdateUser({ data: updateUserData.data }))\r\n        } catch (e) {\r\n            const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n            console.log(\"Error:\", { ...e })\r\n            thunkAPI.dispatch(setCommonRegister({ error: error }))\r\n        }\r\n        console.log(\"check profile\")\r\n        thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n    }\r\n)\r\nexport const forgot = createAsyncThunk(\r\n    \"auth/forgot\",\r\n    async (fogotData: { email: string; message: string }, thunAPI) => {\r\n        thunAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n        try {\r\n            const res = await authAPI.forgot(fogotData.email, fogotData.message)\r\n            if (!res.data.error) {\r\n                thunAPI.dispatch(switchFogot({ newFogot: true }))\r\n            } else {\r\n                thunAPI.dispatch(setCommonRegister({ error: res.data.error }))\r\n            }\r\n        } catch (e) {\r\n            const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n            console.log(\"Error:\", { ...e })\r\n            thunAPI.dispatch(setCommonRegister({ error: error }))\r\n        }\r\n        thunAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n    }\r\n)\r\nexport const newPassword = createAsyncThunk(\r\n    \"auth/newPassword\",\r\n    async (newPasswordData: { newPassword: string; resetPasswordToken: string }, thunAPI) => {\r\n        thunAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n        try {\r\n            const res = await authAPI.setNewPassword(\r\n                newPasswordData.newPassword,\r\n                newPasswordData.resetPasswordToken\r\n            )\r\n            if (!res.data.error) {\r\n                thunAPI.dispatch(setNewPassword({ isUpPassword: true }))\r\n            } else {\r\n                thunAPI.dispatch(setCommonRegister({ error: res.data.error }))\r\n            }\r\n        } catch (e) {\r\n            const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n            console.log(\"Error:\", { ...e })\r\n            thunAPI.dispatch(setCommonRegister({ error: error }))\r\n        }\r\n\r\n        thunAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n    }\r\n)\r\n//\r\nconst slice = createSlice({\r\n    name: \"auth\",\r\n    initialState: authInitialState,\r\n    reducers: {\r\n        switchIsRegister(state, action: PayloadAction<{ newValueIsRegister: boolean }>) {\r\n            state.isRegister = action.payload.newValueIsRegister\r\n        },\r\n        setCommonRegister(state, action: PayloadAction<{ error: any }>) {\r\n            state.commonError = action.payload.error\r\n        },\r\n        logIn(state, action: PayloadAction<{ value: boolean }>) {\r\n            state.isLogged = action.payload.value\r\n        },\r\n        setUser(\r\n            state,\r\n            action: PayloadAction<{\r\n                user: { _id: string; email: string; name: string; avatar: string }\r\n            }>\r\n        ) {\r\n            state.user = action.payload.user\r\n        },\r\n        setUpdateUser(state, action: PayloadAction<{ data: NewUserType }>) {\r\n            state.updatedUser = action.payload.data\r\n        },\r\n        setNewPassword(state, action: PayloadAction<{ isUpPassword: boolean }>) {\r\n            state.isUpdatedPassword = action.payload.isUpPassword\r\n        },\r\n        switchFogot(state, action: PayloadAction<{ newFogot: boolean }>) {\r\n            state.fogot = action.payload.newFogot\r\n        },\r\n    },\r\n})\r\n\r\nexport const authReducer = slice.reducer\r\nexport const {\r\n    switchIsRegister,\r\n    setCommonRegister,\r\n    logIn,\r\n    setUser,\r\n    setUpdateUser,\r\n    setNewPassword,\r\n    switchFogot,\r\n} = slice.actions\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { AppRootStateType } from \"../../n1-main/a2-bll/store/store\"\r\nimport { getUser } from \"../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { PATH } from \"../../n1-main/a1-ui/routes/Routes\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport CardMedia from \"@material-ui/core/CardMedia\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport s from \"./Profile.module.css\"\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const userName = useSelector<AppRootStateType, string>((state) => state.auth.user.name)\r\n    const userEmail = useSelector<AppRootStateType, string>((state) => state.auth.user.email)\r\n    const userAvatar = useSelector<AppRootStateType, string | undefined>(\r\n        (state) => state.auth.user.avatar\r\n    )\r\n    const isLogged = useSelector<AppRootStateType, boolean>((state) => state.auth.isLogged)\r\n    useEffect(() => {\r\n        dispatch(getUser())\r\n    }, [dispatch])\r\n\r\n    if (!isLogged) {\r\n        return <Redirect to={PATH.SIGN_IN} />\r\n    }\r\n\r\n    return (\r\n        <Card className={s.root}>\r\n            <CardActionArea>\r\n                <CardMedia className={s.media} image={userAvatar} title=\"Contemplative Reptile\" />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Name: {userName}\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Email: {userEmail}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime magnam\r\n                        veritatis suscipit. Dolor, quas iste eveniet et saepe quibusdam expedita\r\n                        nihil incidunt quo odio cum culpa, delectus aliquam earum nemo.\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    Learn More\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\n\r\nconst Error = () => {\r\n\r\n    return(\r\n        <div>\r\n            <h1>\r\n\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Error","import { Button, TextField } from \"@material-ui/core\"\r\nimport { useFormik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { forgot } from \"../../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport styles from \"../../../utils/styles/CommonStylesForAuth.module.css\"\r\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { PATH } from \"../../../n1-main/a1-ui/routes/Routes\"\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nconst RenewalPass = () => {\r\n    const message = `<div style=\"background-color: lime; padding: 15px\"> \r\n    password recovery link: <a href='https://tengrix.github.io/fridayproject/#/new-pass/$token$'>Click to here</a></div>`\r\n    const fogot = useSelector<AppRootStateType, boolean>((state) => state.auth.fogot)\r\n    const commonError = useSelector<AppRootStateType, string>((state) => state.auth.commonError)\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = \"Email required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(forgot({ email: values.email, message }))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    if (fogot)\r\n        return (\r\n            <div className={styles.authBlock}>\r\n                <div>Checked your email!</div>\r\n                <div>\r\n                    <NavLink to={PATH.SIGN_IN}>\r\n                        <Button variant=\"outlined\">\r\n                            <KeyboardReturnIcon />\r\n                        </Button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    return (\r\n        <div className={styles.authBlock}>\r\n            <form onSubmit={formik.handleSubmit} className={styles.inputBlock}>\r\n                <TextField\r\n                    placeholder=\"email\"\r\n                    name=\"email\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n                    Send message\r\n                </Button>\r\n                <NavLink to={PATH.SIGN_IN}>\r\n                    <Button variant=\"outlined\">\r\n                        <KeyboardReturnIcon />\r\n                    </Button>\r\n                </NavLink>\r\n                {formik.errors.email && <div style={{ color: \"red\" }}>{formik.errors.email}</div>}\r\n                {commonError && <div style={{ color: \"red\" }}>{commonError}</div>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default RenewalPass\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = any\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    type: string\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className, type,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.default}${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <Button\r\n            type={type}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >Sign In </Button>\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import { TextField } from '@material-ui/core'\r\nimport React, { ChangeEvent, KeyboardEvent } from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = any\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    placeholder: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        placeholder,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n            && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n            && e.key === 'Enter' // и если нажата кнопка Enter\r\n            && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n   /* const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput*/\r\n\r\n    return (\r\n        <>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label={placeholder}\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import { Checkbox, FormControlLabel } from '@material-ui/core'\r\nimport React, { ChangeEvent } from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = any\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <FormControlLabel\r\n                control={<Checkbox className={finalInputClassName} onChange={onChangeCallback} {...restProps} value=\"remember\" color=\"secondary\" />}\r\n                label=\"Remember me\"\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport s from './Loading.module.css'\r\n\r\nfunction Loading() {\r\n    return (\r\n        <>\r\n            <div className={s.loadPage}>\r\n                <div className={s.loader}>\r\n                    <div>\r\n                        <div>\r\n                            <div>\r\n                                <div>\r\n                                    <div>\r\n                                        <div>\r\n                                            <div>\r\n                                                <div>\r\n                                                    <div></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Loading","import React from \"react\"\r\nimport SuperButton from \"../../../n3-MySuperComponents/SuperButton/SuperButton\"\r\nimport SuperInputText from \"../../../n3-MySuperComponents/SuperInputText/SuperInputText\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { login } from \"../../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport SuperCheckbox from \"../../../n3-MySuperComponents/SuperCheckbox/SuperCheckbox\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport { NavLink, Redirect } from \"react-router-dom\"\r\nimport { PATH } from \"../../../n1-main/a1-ui/routes/Routes\"\r\nimport { useFormik } from \"formik\"\r\nimport s from \"./SignIn.module.css\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\"\r\nimport Loading from \"../../../n1-main/a1-ui/loading/Loading\"\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nconst SignInWithFormik = () => {\r\n    const dispatch = useDispatch()\r\n    const isLogged = useSelector<AppRootStateType, boolean>((state) => state.auth.isLogged)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = \"Email required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            } else if (values.password.length < 4) {\r\n                errors.password = \"Invalid password\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(\r\n                login({\r\n                    email: values.email,\r\n                    password: values.password,\r\n                    rememberMe: values.rememberMe,\r\n                })\r\n            )\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    if (isLogged) {\r\n        return <Redirect to={PATH.PROFILE} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isLogged ? (\r\n                <Loading />\r\n            ) : (\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <div className={s.paper}>\r\n                        <div className={s.avatarConatiner}>\r\n                            <Avatar className={s.avatar}>\r\n                                <AccountCircleIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                        <div className={s.typographyContainer}>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Sign In\r\n                            </Typography>\r\n                        </div>\r\n\r\n                        <form onSubmit={formik.handleSubmit} className={s.form} noValidate>\r\n                            <SuperInputText\r\n                                placeholder={\"Username or email\"}\r\n                                type={\"email\"}\r\n                                {...formik.getFieldProps(\"email\")}\r\n                            />\r\n                            {formik.touched.email && formik.errors.email && (\r\n                                <div style={{ color: \"red\" }}>{formik.errors.email}</div>\r\n                            )}\r\n\r\n                            <SuperInputText\r\n                                placeholder={\"Password\"}\r\n                                type={\"password\"}\r\n                                {...formik.getFieldProps(\"password\")}\r\n                            />\r\n\r\n                            {formik.touched.password && formik.errors.password && (\r\n                                <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n                            )}\r\n\r\n                            <SuperCheckbox\r\n                                type={\"rememberMe\"}\r\n                                {...formik.getFieldProps(\"rememberMe\")}\r\n                            />\r\n\r\n                            <SuperButton type=\"submit\"/>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs>\r\n                                    <NavLink to={PATH.RENEWAL_PASS}>\r\n                                        <Button fullWidth variant=\"outlined\">\r\n                                            <span>Forgot password</span>\r\n                                        </Button>\r\n                                    </NavLink>\r\n                                    <NavLink to={PATH.SIGN_UP}>\r\n                                        <Button fullWidth variant=\"outlined\">\r\n                                            Don't have an account? Sign Up\r\n                                        </Button>\r\n                                    </NavLink>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default SignInWithFormik\r\n","import React from \"react\"\r\nimport { signUp } from \"../../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Button, TextField } from \"@material-ui/core\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NavLink, Redirect } from \"react-router-dom\"\r\nimport { PATH } from \"../../../n1-main/a1-ui/routes/Routes\"\r\nimport { useFormik } from \"formik\"\r\nimport s from \"./SignIn.module.css\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confPass?: string\r\n}\r\n\r\nconst SignUp = () => {\r\n    const isRegister = useSelector<AppRootStateType, boolean>((state) => state.auth.isRegister)\r\n    const commonError = useSelector<AppRootStateType, string>((state) => state.auth.commonError)\r\n    const dispatch = useDispatch()\r\n    const sendDataToRegister = (email: string, password: string) => {\r\n        dispatch(signUp({email, password}))\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            confPass: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = \"Email required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            } else if (values.password.length < 7) {\r\n                errors.password = \"Password should be longer 7 symbols\"\r\n            }\r\n            if (values.password !== values.confPass) {\r\n                errors.password = \"Password not identical\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            formik.resetForm()\r\n            sendDataToRegister(values.email, values.password)\r\n        },\r\n    })\r\n\r\n    if (isRegister) {\r\n        return <Redirect to={\"/sign-in\"} />\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={s.paper}>\r\n                <div className={s.avatarConatiner}>\r\n                    <Avatar className={s.avatar}>\r\n                        <AccountCircleIcon />\r\n                    </Avatar>\r\n                </div>\r\n                <div className={s.typographyContainer}>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign Up\r\n                    </Typography>\r\n                </div>\r\n                <form onSubmit={formik.handleSubmit} className={s.form} noValidate>\r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.email}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email && (\r\n                        <div style={{ color: \"red\" }}>{formik.errors.email}</div>\r\n                    )}\r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.password}\r\n                    />\r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        placeholder=\"Confirm password:\"\r\n                        name=\"confPass\"\r\n                        type=\"password\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.confPass}\r\n                    />\r\n\r\n                    {formik.errors.password && (\r\n                        <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n                    )}\r\n\r\n                    <Button fullWidth variant=\"contained\" color=\"secondary\">\r\n                        Sign Up\r\n                    </Button>\r\n\r\n                    <div style={{ color: \"red\" }}>{commonError}</div>\r\n\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <NavLink to={PATH.SIGN_IN}><Button fullWidth variant=\"outlined\">Sign In</Button></NavLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\nexport default SignUp\r\n","import { Button, TextField } from \"@material-ui/core\"\r\nimport { useFormik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect, useParams } from \"react-router-dom\"\r\nimport { newPassword } from \"../../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport styles from \"../../../utils/styles/CommonStylesForAuth.module.css\"\r\n\r\ntype FormikErrorType = {\r\n    password?: string\r\n    confPass?: string\r\n}\r\n\r\nconst NewPass = () => {\r\n    const isUpdatedPassword = useSelector<AppRootStateType, boolean>(\r\n        (state) => state.auth.isUpdatedPassword\r\n    )\r\n    const commonError = useSelector<AppRootStateType, string>((state) => state.auth.commonError)\r\n    const dispatch = useDispatch()\r\n    const { token } = useParams<{ token: string }>()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: \"\",\r\n            confPass: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (values.password.length < 7) {\r\n                errors.password = \"Password should be longer 7 symbols\"\r\n            }\r\n            if (values.password !== values.confPass) {\r\n                errors.password = \"Password not identical\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(newPassword({ newPassword: values.password, resetPasswordToken: token }))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    if (isUpdatedPassword) {\r\n        return <Redirect to={\"/sign-in\"} />\r\n    }\r\n    return (\r\n        <div className={styles.authBlock}>\r\n            <form onSubmit={formik.handleSubmit} className={styles.inputBlock}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Password:\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Confirm password:\"\r\n                    name=\"confPass\"\r\n                    type=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.confPass}\r\n                />\r\n                {formik.errors.password && (\r\n                    <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n                )}\r\n                <Button variant=\"contained\" color=\"secondary\" type={\"submit\"}>\r\n                    Change password\r\n                </Button>\r\n                <div style={{ color: \"red\" }}>{commonError}</div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default NewPass\r\n","import React, { ChangeEvent, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { AppRootStateType } from \"../../n1-main/a2-bll/store/store\"\r\nimport { updateUserInfo } from \"../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport { NewUserType } from \"../../n1-main/a3-dal/mainAPI\"\r\nimport { TextField } from \"@material-ui/core\"\r\nimport s from \"./Profile.module.css\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nconst UpdateProfile = () => {\r\n    const dispatch = useDispatch()\r\n    const oldName = useSelector<AppRootStateType, string>((state) => state.auth.user.name)\r\n    const oldAva = useSelector<AppRootStateType, string>((state) => state.auth.user.avatar)\r\n    const [name, setNewName] = useState<string>(oldName)\r\n    const [avatar, setNewAva] = useState<string>(oldAva)\r\n    const newData: NewUserType = { name, avatar }\r\n    const changeName = () => {\r\n        dispatch(updateUserInfo({ data: newData }))\r\n    }\r\n    const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewName(e.currentTarget.value)\r\n    }\r\n    const onChangeAva = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewAva(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.updateProfile}>\r\n            <TextField placeholder={\"New name\"} value={name} type=\"text\" onChange={onChangeName} />\r\n            <TextField\r\n                placeholder={\"New URL for Ava\"}\r\n                value={avatar}\r\n                type=\"text\"\r\n                onChange={onChangeAva}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={changeName}>\r\n                Submit\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateProfile\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials:true\r\n})\r\n\r\nexport const gradeAPI = {\r\n    grades(grade:number, card_id:string){\r\n        return instance.put<gradeResponseType>(`cards/grade`,{grade,card_id})\r\n    },\r\n    shots(shot:number){\r\n        return instance.put<gradeResponseType>('cards/grade',{shot})\r\n    }\r\n}\r\n\r\nexport type gradeResponseType = {\r\n    _id:string;\r\n    cardsPack_id:string;\r\n    card_id:string;\r\n    user_id:string;\r\n    grade:number;\r\n    shots:number;\r\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport {\r\n    cardsAPI,\r\n    CardsType,\r\n    CreateCardModuleType,\r\n    GetCardsModuleType,\r\n    GetCardsResponceType,\r\n    UpdateCardModuleType,\r\n} from \"../../a3-dal/mainAPI\"\r\nimport { switchLoadingState } from \"./appReducer\"\r\nimport { AuthInitStateType, setCommonRegister } from \"./mainAuthReducer\"\r\nimport { gradeAPI, gradeResponseType } from \"../../a3-dal/GradeAPI\"\r\nimport { Dispatch } from \"redux\"\r\n\r\nexport type CardsInitialStateType = {\r\n    cards: Array<CardsType>\r\n    cardsToLearn: Array<CardsType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n    currentPortionToPaginator: number\r\n    newPageForShow: number\r\n    updatedGrade: gradeResponseType\r\n    learnMode: boolean\r\n}\r\nconst cardsInitialState: CardsInitialStateType = {\r\n    cards: [],\r\n    cardsToLearn: [],\r\n    cardsTotalCount: 0,\r\n    maxGrade: 0,\r\n    minGrade: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    packUserId: \"\",\r\n    currentPortionToPaginator: 1,\r\n    newPageForShow: 1,\r\n    learnMode: false,\r\n    updatedGrade: {\r\n        _id: \"\",\r\n        cardsPack_id: \"string\",\r\n        card_id: \"\",\r\n        user_id: \"\",\r\n        grade: 0,\r\n        shots: 0,\r\n    },\r\n}\r\n\r\nexport const getCardsForCardsPack = createAsyncThunk(\"cardPacks/get\",\r\n    async (getPacksData: { packID: string }, thunkAPI) => {\r\n        thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n        try {\r\n            const { cards } = thunkAPI.getState() as { cards: CardsInitialStateType }\r\n            const module: GetCardsModuleType = {\r\n                params: {\r\n                    cardsPack_id: getPacksData.packID,\r\n                    page: cards.newPageForShow,\r\n                    pageCount: cards.pageCount,\r\n                },\r\n            }\r\n            const moduleToLearn: GetCardsModuleType = {\r\n                params: {\r\n                    cardsPack_id: getPacksData.packID,\r\n                    pageCount: cards.cardsTotalCount,\r\n                },\r\n            }\r\n            const res = await cardsAPI.getCards(cards.learnMode ? moduleToLearn : module)\r\n            thunkAPI.dispatch(getCards({ response: res.data }))\r\n        } catch (e) {\r\n            const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n            console.log(\"Error:\", { ...e })\r\n            thunkAPI.dispatch(setCommonRegister(error))\r\n        } finally {\r\n            thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n        }\r\n    }\r\n)\r\nexport const createCard = createAsyncThunk(\r\n    \"cardPacks/createCard\",\r\n    async (\r\n        createCardData: { question: string; answer: string; cardsPackId: string; grade: number },\r\n        thunkAPI\r\n    ) => {\r\n        const { auth } = thunkAPI.getState() as { auth: AuthInitStateType }\r\n        let createModule: CreateCardModuleType = {\r\n            card: {\r\n                _id: auth.user._id,\r\n                cardsPack_id: createCardData.cardsPackId,\r\n                question: createCardData.question,\r\n                answer: createCardData.answer,\r\n                grade: createCardData.grade,\r\n            },\r\n        }\r\n        thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n        try {\r\n            await cardsAPI.createCard(createModule)\r\n            await thunkAPI.dispatch(getCardsForCardsPack({ packID: createCardData.cardsPackId }))\r\n        } catch (e) {\r\n        } finally {\r\n            thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n        }\r\n    }\r\n)\r\nexport const deleteCard = createAsyncThunk(\r\n    \"cardPacks/deleteCard\",\r\n    async (deleteData: { idCard: string; cardsPackId: string }, thunkAPI) => {\r\n        thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n        try {\r\n            await cardsAPI.deleteCard(deleteData.idCard)\r\n            await thunkAPI.dispatch(getCardsForCardsPack({ packID: deleteData.cardsPackId }))\r\n        } catch (e) {\r\n        } finally {\r\n            thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n        }\r\n    }\r\n)\r\nexport const updateCard = createAsyncThunk(\r\n    \"cardPacks/updateCard\",\r\n    async (\r\n        updateData: { idCard: string; question: string; answer: string; packID: string },\r\n        thunkAPI\r\n    ) => {\r\n        let createModule: UpdateCardModuleType = {\r\n            card: {\r\n                _id: updateData.idCard,\r\n                question: updateData.question,\r\n                answer: updateData.answer,\r\n            },\r\n        }\r\n        thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"loading\" }))\r\n        try {\r\n            await cardsAPI.updateCard(createModule)\r\n            await thunkAPI.dispatch(getCardsForCardsPack({ packID: updateData.packID }))\r\n        } catch (e) {\r\n        } finally {\r\n            thunkAPI.dispatch(switchLoadingState({ valueInLoading: \"successed\" }))\r\n        }\r\n    }\r\n)\r\nconst slice = createSlice({\r\n    name: \"cardPacks\",\r\n    initialState: cardsInitialState,\r\n    reducers: {\r\n        getCards(state, action: PayloadAction<{ response: GetCardsResponceType }>) {\r\n            if (!state.learnMode) {\r\n                state.cards = action.payload.response.cards\r\n                state.cardsTotalCount = action.payload.response.cardsTotalCount\r\n                state.maxGrade = action.payload.response.maxGrade\r\n                state.minGrade = action.payload.response.minGrade\r\n                state.packUserId = action.payload.response.packUserId\r\n                state.page = action.payload.response.page\r\n                state.pageCount = action.payload.response.pageCount\r\n            } else {\r\n                state.cardsToLearn = action.payload.response.cards\r\n            }\r\n        },\r\n        changeNewPageForShowCards(state, action: PayloadAction<{ newShowPage: number }>) {\r\n            state.newPageForShow = action.payload.newShowPage\r\n        },\r\n        changePortionCards(state, action: PayloadAction<{ currentPortion: number }>) {\r\n            state.currentPortionToPaginator = action.payload.currentPortion\r\n        },\r\n        switchLearnMode(state, action: PayloadAction<{ newValue: boolean }>) {\r\n            state.learnMode = action.payload.newValue\r\n        },\r\n    },\r\n})\r\nexport const getGradeTC = (grade: number, card_id: string) => (dispatch: Dispatch) => {\r\n    gradeAPI.grades(grade, card_id).then((res) => {})\r\n}\r\nexport const cardsReducer = slice.reducer\r\nexport const { getCards, changeNewPageForShowCards, changePortionCards, switchLearnMode } =\r\n    slice.actions\r\n","import React, { useState } from \"react\"\r\nimport styles from \"./SuperPaginator.module.scss\"\r\n\r\ntype PaginatorPropsType = {\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    portionSize: number\r\n    currentPortion: number\r\n    onClickToPage: (newCurrentPage: number, currentPortion: number) => void\r\n}\r\n\r\nconst SuperPaginator = (props: PaginatorPropsType) => {\r\n    let page = []\r\n    const pageCount = Math.ceil(props.totalItemsCount / props.pageSize)\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        page.push(i)\r\n    }\r\n    const portionCount = Math.ceil(pageCount / props.portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(props.currentPortion)\r\n    const leftPortionNumber = (portionNumber - 1) * props.portionSize + 1\r\n    const rightPortionNumber = portionNumber * props.portionSize\r\n\r\n    return (\r\n        <div className={styles.paginatorBody}>\r\n            <button\r\n                onClick={() => setPortionNumber(1)}\r\n                disabled={portionNumber == 1}\r\n                className={styles.buttons}\r\n            >\r\n                - -\r\n            </button>\r\n            <button\r\n                onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}\r\n                disabled={portionNumber == 1}\r\n                className={styles.buttons}\r\n            >\r\n                -\r\n            </button>\r\n\r\n            {page\r\n                .filter((p) => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                .map((p) => {\r\n                    const pageStyle = `${props.currentPage === p && styles.pageActive} ${\r\n                        styles.numberPageStyle\r\n                    }`\r\n                    return (\r\n                        <span key={p} onClick={() => props.onClickToPage(p, portionNumber)} className={pageStyle}>\r\n                            {p}\r\n                        </span>\r\n                    )\r\n                })}\r\n\r\n            <button\r\n                onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}\r\n                disabled={portionCount <= portionNumber}\r\n                className={styles.buttons}\r\n            >\r\n                +\r\n            </button>\r\n            <button\r\n                onClick={() => setPortionNumber(portionCount)}\r\n                disabled={portionCount <= portionNumber}\r\n                className={styles.buttons}\r\n            >\r\n                ++\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperPaginator\r\n","import { Button, Modal } from \"@material-ui/core\"\r\nimport React, { useState } from \"react\"\r\nimport styles from \"./SuperModal.module.scss\"\r\n\r\ntype PropsType = {\r\n    nameButton: string\r\n    body: any\r\n}\r\n\r\nconst SuperModal = (props: PropsType) => {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"primary\" type=\"button\" onClick={() => setOpen(true)}>\r\n                {props.nameButton}\r\n            </Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div className={styles.modal}>{props.body}</div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperModal\r\n","import { Button } from \"@material-ui/core\"\r\nimport { useFormik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { updateCard } from \"../../../n1-main/a2-bll/store/cardsReducer\"\r\n\r\nconst UpdateCard = (props: {\r\n    question: string\r\n    answer: string\r\n    idCard: string\r\n    idPack: string\r\n}) => {\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            question: props.question,\r\n            answer: props.answer,\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(\r\n                updateCard({\r\n                    question: values.question,\r\n                    answer: values.answer,\r\n                    idCard: props.idCard,\r\n                    packID: props.idPack,\r\n                })\r\n            )\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    return (\r\n        <form\r\n            onSubmit={formik.handleSubmit}\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-evenly\",\r\n                height: \"80%\",\r\n                width: \"90%\",\r\n            }}\r\n        >\r\n            <textarea\r\n                id=\"question\"\r\n                name=\"question\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.question}\r\n                placeholder=\"Question\"\r\n                style={{\r\n                    height: \"30%\",\r\n                }}\r\n            />\r\n            <textarea\r\n                id=\"answer\"\r\n                name=\"answer\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.answer}\r\n                placeholder=\"Answer\"\r\n                style={{\r\n                    height: \"30%\",\r\n                }}\r\n            />\r\n            <Button variant=\"outlined\" color=\"secondary\" type=\"button\" onClick={formik.submitForm}>\r\n                Update\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\nexport default UpdateCard\r\n","import { Button } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport { CardsType } from \"../../../n1-main/a3-dal/mainAPI\"\r\nimport SuperModal from \"../../../n3-MySuperComponents/SuperModal/SuperModal\"\r\nimport UpdateCard from \"./UpdateCard\"\r\n\r\nconst Card = (props: CardsType & { userId: string; packId: string; delCard: (id: string) => void }) => {\r\n    return (\r\n        <tr>\r\n            <td align=\"center\">{props.question}</td>\r\n            <td align=\"center\">\r\n                <SuperModal nameButton=\"Show answer\" body={props.answer} />\r\n            </td>\r\n            <td align=\"center\">{props.grade}</td>\r\n            <td align=\"center\">{props.shots}</td>\r\n            <td align=\"center\">{props.created}</td>\r\n            <td align=\"center\">{props.updated}</td>\r\n            {props.userId === props.packId && (\r\n                <td align=\"center\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={() => props.delCard(props._id)}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                    <SuperModal\r\n                        nameButton=\"Update\"\r\n                        body={\r\n                            <UpdateCard\r\n                                answer={props.answer}\r\n                                question={props.question}\r\n                                idCard={props._id}\r\n                                idPack={props.packId}\r\n                            />\r\n                        }\r\n                    />\r\n                </td>\r\n            )}\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Modal from \"@material-ui/core/Modal\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { AppRootStateType } from \"../../n1-main/a2-bll/store/store\"\r\nimport { useState } from \"react\"\r\nimport { CardsType } from \"../../n1-main/a3-dal/mainAPI\"\r\nimport {\r\n    getCardsForCardsPack,\r\n    getGradeTC,\r\n    switchLearnMode,\r\n} from \"../../n1-main/a2-bll/store/cardsReducer\"\r\n\r\ntype ShowAnswerModalType = {\r\n    name: string\r\n    disabled?: any\r\n    grade: number\r\n    packId: string\r\n}\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10\r\n}\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand()\r\n    const left = 50 + rand()\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: \"absolute\",\r\n        width: 500,\r\n        backgroundColor: \"lightpink\",\r\n        border: \"2px solid #000\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}))\r\n\r\nexport default function SmartLearn(props: ShowAnswerModalType) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [modalStyle] = React.useState(getModalStyle)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const getCardsForLearn = () => {\r\n        dispatch(switchLearnMode({ newValue: true }))\r\n        dispatch(getCardsForCardsPack({ packID: props.packId }))\r\n    }\r\n    const learnModeOff = () => {\r\n        dispatch(switchLearnMode({ newValue: false }))\r\n        dispatch(getCardsForCardsPack({ packID: props.packId }))\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n        getCardsForLearn()\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        learnModeOff()\r\n    }\r\n\r\n    let cards = useSelector<AppRootStateType, CardsType[]>((state) => state.cards.cardsToLearn)\r\n    const [numQA, setNumQA] = useState<number>(0)\r\n    const [countA, setCountA] = useState<number>(1)\r\n    const grade =[\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const [randomQ, setRandomQ] = useState<boolean>(false)\r\n    const showAnswer = () => {\r\n        setShow(!show)\r\n    }\r\n\r\n    let getAllQuestion:Array<any> = []\r\n    let getAllRandomQuestion:Array<any> = []\r\n    let getAllAnswers:Array<string|number> = []\r\n    let getIdOfQuestion:Array<string> = []\r\n    let out:Array<number> = [];\r\n    cards.map((el) => (getAllQuestion.push([el.question]), getAllAnswers.push(el.answer),\r\n        getIdOfQuestion.push(el._id), getAllRandomQuestion.push([el.question])) )\r\n    cards.map((el,i)=>getAllQuestion[i].push(el.grade))\r\n    for (let i = 0; i < getAllQuestion.length; ++i) {\r\n        for (let j = 0; j < getAllQuestion[i][1]; ++j) {\r\n            out.push(getAllQuestion[i][0]);\r\n        }\r\n    }\r\n    const nextQuestion = () => {\r\n        setNumQA(numQA + 1)\r\n        setCountA(countA + 1)\r\n        if (randomQ) {\r\n            setNumQA(out[Math.floor(Math.random() * out.length)])\r\n            console.log(out[Math.floor(Math.random() * out.length)])\r\n            setCountA(countA + 1)\r\n        }\r\n    }\r\n    const startAgain = () => {\r\n        setRandomQ(true)\r\n        setCountA(1)\r\n    }\r\n    const newGradesForQuestions = (i: number, id: string) => {\r\n        dispatch(getGradeTC(i, id))\r\n    }\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">Learn \"Pack Name\"</h2>\r\n            <div id=\"simple-modal-description\">\r\n                <span>\r\n                    Question number: {countA}/{cards.length}{\" \"}\r\n                    {countA === cards.length && (\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            variant={\"outlined\"}\r\n                            onClick={() => {\r\n                                startAgain()\r\n                            }}\r\n                        >\r\n                            start again\r\n                        </Button>\r\n                    )}\r\n                </span>\r\n                <div>{randomQ?out[Math.floor(Math.random() * out.length)]: getAllRandomQuestion[numQA] }</div>\r\n                <div>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant={\"outlined\"}\r\n                        disabled={false}\r\n                        onClick={showAnswer}\r\n                    >\r\n                        show answer\r\n                    </Button>\r\n                </div>\r\n                <div>{show ? getAllAnswers[numQA] : \"\"}</div>\r\n            </div>\r\n            <div>\r\n                <h4>Rate Yourself</h4>\r\n                {grade.map((el, i) => (\r\n                    <Button\r\n                        key={\"grade-\" + i}\r\n                        onClick={() => newGradesForQuestions(i + 1, getIdOfQuestion[numQA])}\r\n                    >\r\n                        {el}\r\n                    </Button>\r\n                ))}\r\n            </div>\r\n            <Button color=\"secondary\" variant=\"outlined\" onClick={handleClose}>\r\n                Cancel\r\n            </Button>\r\n            {countA === cards.length ? (\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant={\"outlined\"}\r\n                    disabled={true}\r\n                    onClick={() => {\r\n                        startAgain()\r\n                    }}\r\n                >\r\n                    {\" \"}\r\n                    Next{\" \"}\r\n                </Button>\r\n            ) : (\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant={\"outlined\"}\r\n                    disabled={false}\r\n                    onClick={() => {\r\n                        nextQuestion()\r\n                    }}\r\n                >\r\n                    {\" \"}\r\n                    Next{\" \"}\r\n                </Button>\r\n            )}\r\n        </div>\r\n    )\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={handleOpen}\r\n                disabled={props.disabled}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import { Button } from \"@material-ui/core\"\r\nimport { useFormik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { createCard } from \"../../../n1-main/a2-bll/store/cardsReducer\"\r\n\r\nconst CreateCard = (props: { packID: string }) => {\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            question: \"\",\r\n            answer: \"\",\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(\r\n                createCard({\r\n                    question: values.question,\r\n                    answer: values.answer,\r\n                    cardsPackId: props.packID,\r\n                    grade: 3,\r\n                })\r\n            )\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    return (\r\n        <form\r\n            onSubmit={formik.handleSubmit}\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-evenly\",\r\n                height: \"80%\",\r\n                width: \"90%\",\r\n            }}\r\n        >\r\n            <textarea\r\n                id=\"question\"\r\n                name=\"question\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.question}\r\n                placeholder=\"Question\"\r\n                style={{\r\n                    height: \"30%\",\r\n                }}\r\n            />\r\n            <textarea\r\n                id=\"answer\"\r\n                name=\"answer\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.answer}\r\n                placeholder=\"Answer\"\r\n                style={{\r\n                    height: \"30%\",\r\n                }}\r\n            />\r\n            <Button variant=\"outlined\" color=\"secondary\" type=\"button\" onClick={formik.submitForm}>\r\n                Create\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateCard\r\n","import { Button } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { removeCardPack } from \"../../../n1-main/a2-bll/store/cardPacksReducer\"\r\n\r\nconst DeleteCardPack = (props: { idPack: string }) => {\r\n    const dispatch = useDispatch()\r\n    const delPack = () => {\r\n        const idPack = props.idPack\r\n        dispatch(removeCardPack({ idPack }))\r\n    }\r\n    return (\r\n        <div\r\n            style={{\r\n                height: \"60%\",\r\n                width: \"60%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-evenly\",\r\n                alignItems: \"center\",\r\n            }}\r\n        >\r\n            <div>Do you sure?</div>\r\n            <Button variant=\"outlined\" color=\"secondary\" type=\"button\" onClick={delPack}>\r\n                Delete pack!\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteCardPack\r\n","import { Button } from \"@material-ui/core\"\r\nimport { useFormik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { updateCardPack } from \"../../../n1-main/a2-bll/store/cardPacksReducer\"\r\n\r\nconst RenameCardPack = (props: { idPack: string; namePack?: string }) => {\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newNameCardsPack: props.namePack ? props.namePack : \"\",\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(updateCardPack({ idPack: props.idPack, newTitle: values.newNameCardsPack }))\r\n        },\r\n    })\r\n    return (\r\n        <form\r\n            onSubmit={formik.handleSubmit}\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-evenly\",\r\n                height: \"60%\",\r\n                width: \"50%\",\r\n            }}\r\n        >\r\n            <input\r\n                id=\"newNameCardsPack\"\r\n                name=\"newNameCardsPack\"\r\n                placeholder=\"New name\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.newNameCardsPack}\r\n                style={{\r\n                    height: \"15%\",\r\n                }}\r\n            />\r\n            <Button variant=\"outlined\" color=\"secondary\" type=\"button\" onClick={formik.submitForm}>\r\n                Rename\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RenameCardPack\r\n","import { Button } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport SuperModal from \"../../../n3-MySuperComponents/SuperModal/SuperModal\"\r\nimport SmartLearn from \"../../b7-learn/SmartLearn\"\r\nimport CreateCard from \"./CreateCard\"\r\nimport DeleteCardPack from \"./DeletePack\"\r\nimport styles from \"./Cards.module.scss\"\r\nimport RenameCardPack from \"./RenameCardPack\"\r\n\r\nconst CardsControl = (props: {\r\n    userId: string\r\n    packUserId: string\r\n    packId: string\r\n    namePack: string\r\n    disLearn: boolean\r\n    grade: number\r\n    backToPreviousPage: () => void\r\n}) => (\r\n    <div className={styles.controlBlock}>\r\n        <div className={styles.namePack}>{props.namePack}</div>\r\n        <div className={styles.buttonBlock}>\r\n            {props.userId === props.packUserId && (\r\n                <div className={styles.userControl}>\r\n                    <SuperModal\r\n                        nameButton=\"Delete pack\"\r\n                        body={<DeleteCardPack idPack={props.packId} />}\r\n                    />\r\n                    <SuperModal nameButton=\"Add card\" body={<CreateCard packID={props.packId} />} />\r\n                    <SuperModal\r\n                        nameButton=\"Rename\"\r\n                        body={<RenameCardPack idPack={props.packId} namePack={props.namePack} />}\r\n                    />\r\n                </div>\r\n            )}\r\n            <SmartLearn\r\n                grade={props.grade}\r\n                name=\"learn\"\r\n                disabled={props.disLearn}\r\n                packId={props.packId}\r\n            />\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={props.backToPreviousPage}\r\n            >\r\n                Back\r\n            </Button>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default CardsControl\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect, useHistory, useParams } from \"react-router-dom\"\r\nimport Loading from \"../../../n1-main/a1-ui/loading/Loading\"\r\nimport { PATH } from \"../../../n1-main/a1-ui/routes/Routes\"\r\nimport {\r\n    CardsInitialStateType,\r\n    changeNewPageForShowCards,\r\n    changePortionCards,\r\n    deleteCard,\r\n    getCardsForCardsPack,\r\n} from \"../../../n1-main/a2-bll/store/cardsReducer\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport { initCardPacks } from \"../../../n1-main/a3-dal/mainAPI\"\r\nimport SuperPaginator from \"../../../n3-MySuperComponents/SuperPaginator/SuperPaginator\"\r\nimport Card from \"./Card\"\r\nimport styles from \"./Cards.module.scss\"\r\nimport CardsControl from \"./CardsControl\"\r\n\r\nconst Cards = () => {\r\n    const { packID } = useParams<{ packID: string }>()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsForCardsPack({ packID }))\r\n    }, [])\r\n\r\n    const isLogged = useSelector<AppRootStateType, boolean>((state) => state.auth.isLogged)\r\n\r\n    const userId = useSelector<AppRootStateType, string>((state) => state.auth.user._id)\r\n\r\n    const loadingProgress = useSelector<AppRootStateType, \"loading\" | \"successed\">(\r\n        (state) => state.app.loadingProgress\r\n    )\r\n\r\n    const grade = useSelector<AppRootStateType, number>((state) => state.cards.updatedGrade.grade)\r\n\r\n    const cardsState = useSelector<AppRootStateType, CardsInitialStateType>((state) => state.cards)\r\n\r\n    const NamePack = useSelector<AppRootStateType, initCardPacks | undefined>((state) =>\r\n        state.cardPacks.cardPacks.find((p) => p._id === packID)\r\n    )?.name\r\n\r\n    const deletedPack = useSelector<AppRootStateType, boolean>(\r\n        (state) => state.cardPacks.packDeleted\r\n    )\r\n\r\n    const clickToPaginator = (newShowPage: number, currentPortion: number) => {\r\n        dispatch(changeNewPageForShowCards({ newShowPage }))\r\n        dispatch(changePortionCards({ currentPortion }))\r\n        dispatch(getCardsForCardsPack({ packID }))\r\n    }\r\n\r\n    const history = useHistory()\r\n\r\n    const backToPreviousPage = () => {\r\n        history.push(PATH.PACKS)\r\n    }\r\n\r\n    const delCard = (idCard: string) => {\r\n        const cardsPackId = packID\r\n        dispatch(deleteCard({ idCard, cardsPackId }))\r\n    }\r\n\r\n    if (!isLogged) {\r\n        return <Redirect to={PATH.SIGN_IN} />\r\n    }\r\n\r\n    if (deletedPack) {\r\n        return <Redirect to={PATH.PACKS} />\r\n    }\r\n\r\n    if (loadingProgress === \"loading\" && !cardsState.learnMode) return <Loading />\r\n\r\n    return (\r\n        <div className={styles.cardsBlock}>\r\n            <div className={styles.body}>\r\n                <CardsControl\r\n                    backToPreviousPage={backToPreviousPage}\r\n                    packId={packID}\r\n                    userId={userId}\r\n                    packUserId={cardsState.packUserId}\r\n                    namePack={NamePack ? NamePack : \"\"}\r\n                    grade={grade}\r\n                    disLearn={!cardsState.cards.length}\r\n                />\r\n                <table cellPadding=\"7\" width=\"100%\">\r\n                    <tr>\r\n                        <th>Qustion</th>\r\n                        <th>Answer</th>\r\n                        <th>Grade</th>\r\n                        <th>Shots</th>\r\n                        <th>Created</th>\r\n                        <th>Updated</th>\r\n                        {userId === cardsState.packUserId && <th>Control</th>}\r\n                    </tr>\r\n                    {cardsState.cards.length &&\r\n                        cardsState.cards.map((c) => (\r\n                            <Card\r\n                                _id={c._id}\r\n                                answer={c.answer}\r\n                                question={c.question}\r\n                                cardsPack_id={c.cardsPack_id}\r\n                                created={c.created}\r\n                                grade={c.grade}\r\n                                updated={c.updated}\r\n                                shots={c.shots}\r\n                                userId={userId}\r\n                                user_id={c.user_id}\r\n                                packId={packID}\r\n                                delCard={delCard}\r\n                            />\r\n                        ))}\r\n                </table>\r\n                <SuperPaginator\r\n                    currentPage={cardsState.page}\r\n                    pageSize={cardsState.pageCount}\r\n                    portionSize={5}\r\n                    currentPortion={cardsState.currentPortionToPaginator}\r\n                    totalItemsCount={cardsState.cardsTotalCount}\r\n                    onClickToPage={clickToPaginator}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards\r\n","import React from \"react\"\r\nimport {  initCardPacks } from \"../../../n1-main/a3-dal/mainAPI\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { Button } from \"@material-ui/core\"\r\n\r\ntype ContainerCardsPackType = {\r\n    cardsPack: initCardPacks\r\n    delPack: (idPack: string) => void\r\n    updateTitle: (newTitle: string, idPack: string) => void\r\n    userId: string\r\n}\r\n\r\nconst CardsPack = (props: ContainerCardsPackType) => {\r\n    return (\r\n        <tr>\r\n            <td align=\"center\">{props.cardsPack.name}</td>\r\n            <td align=\"center\">{props.cardsPack.cardsCount}</td>\r\n            <td align=\"center\">{props.cardsPack.created}</td>\r\n            <td align=\"center\">{props.cardsPack.updated}</td>\r\n            <td align=\"center\">\r\n                <NavLink to={\"/cards/\" + props.cardsPack._id}>\r\n                    <Button variant=\"outlined\" color=\"primary\" type=\"button\">\r\n                        Watch\r\n                    </Button>\r\n                </NavLink>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\nexport default CardsPack\r\n","import { Button } from \"@material-ui/core\"\r\nimport { useFormik } from \"formik\"\r\nimport React, { useCallback } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { createCardPack } from \"../../../n1-main/a2-bll/store/cardPacksReducer\"\r\nimport SuperModal from \"../../../n3-MySuperComponents/SuperModal/SuperModal\"\r\n\r\nconst CreateCardsPack = () => {\r\n    const dispatch = useDispatch()\r\n    const newCardPack = useCallback((newName: string) => {\r\n            dispatch(createCardPack({ newName }))\r\n        }, [dispatch]\r\n    )\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            NameNewCardsPack: \"\",\r\n        },\r\n        onSubmit: (values) => {\r\n            newCardPack(values.NameNewCardsPack)\r\n        },\r\n    })\r\n    return (\r\n        <SuperModal\r\n            nameButton=\"Create card pack\"\r\n            body={\r\n                <form\r\n                    onSubmit={formik.handleSubmit}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"space-evenly\",\r\n                        height: \"60%\",\r\n                        width: \"50%\",\r\n                    }}\r\n                >\r\n                    <input\r\n                        id=\"NameNewCardsPack\"\r\n                        name=\"NameNewCardsPack\"\r\n                        placeholder=\"Name new pack\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.NameNewCardsPack}\r\n                        style={{\r\n                            height: \"15%\",\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        type=\"button\"\r\n                        onClick={formik.submitForm}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </form>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default CreateCardsPack\r\n","import { Button, Slider } from \"@material-ui/core\"\r\nimport { useFormik } from \"formik\"\r\nimport React from \"react\"\r\n\r\ntype PropsType = {\r\n    minCount: number\r\n    maxCount: number\r\n    changeMaxMinRange: (newValue: number[]) => void\r\n    setValue: (newValue: number[]) => void\r\n    value: number[]\r\n}\r\n\r\nconst SearchPack = (props: PropsType) => {\r\n    const minValue = props.minCount\r\n    const maxValue = props.maxCount\r\n    const handleChange = (event: any, newValue: number | number[]) => {\r\n        props.setValue(newValue as number[])\r\n    }\r\n    const valuetext = (value: number) => {\r\n        return `${value}`\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            namePack: \"\",\r\n        },\r\n        onSubmit: (values) => {\r\n            formik.resetForm()\r\n            props.changeMaxMinRange(props.value)\r\n        },\r\n    })\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"500px\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                flexDirection: \"row\",\r\n            }}\r\n        >\r\n            <Slider\r\n                value={props.value}\r\n                onChange={handleChange}\r\n                aria-labelledby=\"range-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                style={{ width: \"200px\" }}\r\n                getAriaValueText={valuetext}\r\n                min={minValue}\r\n                max={maxValue}\r\n            />\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={formik.submitForm}\r\n                >\r\n                    Search\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchPack\r\n","import React, { ChangeEvent } from \"react\"\r\nimport CreateCardsPack from \"./CreateCardsPack\"\r\nimport SearchPack from \"./SearchPack\"\r\nimport styles from \"./CardsPacks.module.scss\"\r\n\r\nconst CardsPacksControl = (props: {\r\n    minCCount: number\r\n    maxCcount: number\r\n    cangeMaxMinRange: (newValue: number[]) => void;\r\n    checked: boolean\r\n    showMyCardPacks: (e: ChangeEvent<HTMLInputElement>) => void\r\n}) => {\r\n    const [value, setValue] = React.useState<number[]>([props.minCCount, props.maxCcount])\r\n    return (\r\n        <div className={styles.searchBlock}>\r\n            <SearchPack\r\n                minCount={props.minCCount}\r\n                maxCount={props.maxCcount}\r\n                changeMaxMinRange={props.cangeMaxMinRange}\r\n                setValue={setValue}\r\n                value={value}\r\n            />\r\n            <CreateCardsPack />\r\n            <div>\r\n                <input type=\"checkbox\" checked={props.checked} onChange={props.showMyCardPacks} />\r\n                My cardPacks\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardsPacksControl\r\n","import React, { ChangeEvent, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Loading from \"../../../n1-main/a1-ui/loading/Loading\"\r\nimport {\r\n    removeCardPack,\r\n    getPackCards,\r\n    updateCardPack,\r\n    showMyCardsPacks,\r\n    changeMaxMinCards,\r\n    changeSort,\r\n    initCardsPacksStateType,\r\n    changeNewPageForShowPacks,\r\n    changePortionPacks,\r\n} from \"../../../n1-main/a2-bll/store/cardPacksReducer\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport SuperPaginator from \"../../../n3-MySuperComponents/SuperPaginator/SuperPaginator\"\r\nimport CardsPack from \"./CardsPack\"\r\nimport styles from \"./CardsPacks.module.scss\"\r\nimport CardsPacksControl from \"./CardsPacksControl\"\r\n\r\nconst CardPacksPage = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cardPacksState = useSelector<AppRootStateType, initCardsPacksStateType>(\r\n        (state) => state.cardPacks\r\n    )\r\n\r\n    const userId = useSelector<AppRootStateType, string>((state) => state.auth.user._id)\r\n\r\n    const updateTitle = (newTitle: string, idPack: string) => {\r\n        dispatch(updateCardPack({ idPack, newTitle }))\r\n    }\r\n\r\n    const delPack = (idPack: string) => {\r\n        dispatch(removeCardPack({ idPack }))\r\n    }\r\n\r\n    const [checked, setChecked] = useState(cardPacksState.showMyCardsPacks)\r\n\r\n    const showMyCardPacks = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const newIsDoneValue = e.currentTarget.checked\r\n        setChecked(newIsDoneValue)\r\n        dispatch(showMyCardsPacks({ isShow: newIsDoneValue }))\r\n        dispatch(getPackCards())\r\n    }\r\n\r\n    const changeMaxMinRange = (newValue: number[]) => {\r\n        dispatch(changeMaxMinCards({ newValue }))\r\n        dispatch(getPackCards())\r\n    }\r\n\r\n    const loadingProgress = useSelector<AppRootStateType, \"loading\" | \"successed\">(\r\n        (state) => state.app.loadingProgress\r\n    )\r\n\r\n    const clickToPaginator = (newShowPage: number, currentPortion: number) => {\r\n        dispatch(changeNewPageForShowPacks({ newShowPage }))\r\n        dispatch(changePortionPacks({ currentPortion }))\r\n        dispatch(getPackCards())\r\n    }\r\n\r\n    const changeSortCardsPacks = (\r\n        newValue: \"0updated\" | \"1updated\" | \"0cardsCount\" | \"1cardsCount\"\r\n    ) => {\r\n        dispatch(changeSort({ newValue }))\r\n        dispatch(getPackCards())\r\n    }\r\n\r\n    if (loadingProgress === \"loading\") return <Loading />\r\n\r\n    return (\r\n        <div className={styles.cardsPacksBlock}>\r\n            <div className={styles.body}>\r\n                <CardsPacksControl\r\n                    cangeMaxMinRange={changeMaxMinRange}\r\n                    showMyCardPacks={showMyCardPacks}\r\n                    checked={checked}\r\n                    maxCcount={cardPacksState.maxCardsCount}\r\n                    minCCount={cardPacksState.minCardsCount}\r\n                />\r\n                <table cellPadding=\"7\" width=\"100%\">\r\n                    <tr>\r\n                        <th>Cards pack name</th>\r\n                        <th>\r\n                            Cards count\r\n                            <input\r\n                                type=\"button\"\r\n                                value=\"min\"\r\n                                onClick={() => changeSortCardsPacks(\"1cardsCount\")}\r\n                            />\r\n                            <input\r\n                                type=\"button\"\r\n                                value=\"max\"\r\n                                onClick={() => changeSortCardsPacks(\"0cardsCount\")}\r\n                            />\r\n                        </th>\r\n                        <th>\r\n                            Created\r\n                            <input\r\n                                type=\"button\"\r\n                                value=\"Old\"\r\n                                onClick={() => changeSortCardsPacks(\"1updated\")}\r\n                            />\r\n                            <input\r\n                                type=\"button\"\r\n                                value=\"New\"\r\n                                onClick={() => changeSortCardsPacks(\"0updated\")}\r\n                            />\r\n                        </th>\r\n                        <th>Updated</th>\r\n                        <th>Control</th>\r\n                    </tr>\r\n                    {cardPacksState.cardPacks.map((el) => (\r\n                        <CardsPack\r\n                            key={el._id}\r\n                            cardsPack={el}\r\n                            delPack={delPack}\r\n                            updateTitle={updateTitle}\r\n                            userId={userId}\r\n                        />\r\n                    ))}\r\n                </table>\r\n                <SuperPaginator\r\n                    pageSize={10}\r\n                    totalItemsCount={cardPacksState.cardPacksTotalCount}\r\n                    currentPage={cardPacksState.page}\r\n                    onClickToPage={clickToPaginator}\r\n                    portionSize={5}\r\n                    currentPortion={cardPacksState.currentPortionToPaginator}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CardPacksPage\r\n","import { Redirect, Route, Switch } from \"react-router-dom\"\r\nimport Profile from \"../../../n2-features/b6-profile/Profile\"\r\nimport Error from \"../../../n2-features/b4-errors/error/Error\"\r\nimport React from \"react\"\r\nimport RenewalPass from \"../../../n2-features/b3-pass/Password/RenewalPass\"\r\nimport SignInWithFormik from \"../../../n2-features/b2-auth/sign-in-up/SignIn\"\r\nimport SignUp from \"../../../n2-features/b2-auth/sign-in-up/SignUp\"\r\nimport NewPass from \"../../../n2-features/b3-pass/Password/NewPass\"\r\nimport UpdateProfile from \"../../../n2-features/b6-profile/UpdateProfile\"\r\nimport Cards from \"../../../n2-features/b5-cardsPack/Cards/Cards\"\r\nimport CardPacksPage from \"../../../n2-features/b5-cardsPack/cardsPacksPage/CardPacksPage\"\r\nimport SmartLearn from \"../../../n2-features/b7-learn/SmartLearn\"\r\n\r\nexport const PATH = {\r\n    PROFILE: \"/profile\",\r\n    SIGN_IN: \"/sign-in\",\r\n    SIGN_UP: \"/sign-up\",\r\n    NEW_PASS: \"/new-pass/:token?\",\r\n    RENEWAL_PASS: \"/renewal-pass\",\r\n    ERROR: \"/404\",\r\n    UPDATE_USER: \"/update-user\",\r\n    PACKS: \"/packs\",\r\n    CARDS: \"/cards/:packID?\",\r\n    PACKS_RAW: \"/packs-raw\",\r\n    QUIZ: \"/learn\",\r\n}\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={\"/\"} exact component={Profile} />\r\n                <Route path={PATH.PROFILE} component={Profile} />\r\n                <Route path={PATH.PROFILE} component={Error} />\r\n                <Route path={PATH.SIGN_IN} component={SignInWithFormik} />\r\n                <Route path={PATH.SIGN_UP} component={SignUp} />\r\n                <Route path={PATH.NEW_PASS} component={NewPass} />\r\n                <Route path={PATH.RENEWAL_PASS} component={RenewalPass} />\r\n                <Route path={PATH.UPDATE_USER} component={UpdateProfile} />\r\n                <Route path={PATH.PACKS} component={CardPacksPage} />\r\n                <Route path={PATH.CARDS} component={Cards} />\r\n                <Route path={PATH.QUIZ} component={SmartLearn} />\r\n                <Route path={\"/404\"} render={() => <h1>404:PAGE NOT FOUND</h1>} />\r\n                <Redirect from={\"*\"} to={PATH.ERROR} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import { Button } from '@material-ui/core';\r\nimport React, { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../../../n1-main/a2-bll/store/mainAuthReducer';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst Logout = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logout())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={logoutHandler}>Logout<ExitToAppIcon/></Button>\r\n        </div>\r\n    )\r\n}\r\nexport default Logout","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport s from \"./Header.module.css\"\r\nimport { PATH } from \"../routes/Routes\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { AppRootStateType } from \"../../a2-bll/store/store\"\r\nimport Logout from \"../../../n2-features/b2-auth/sign-in-up/Logout\"\r\nimport { Avatar, Button } from \"@material-ui/core\"\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\"\r\nimport SettingsIcon from \"@material-ui/icons/Settings\"\r\n\r\nfunction Header() {\r\n    const isLogged = useSelector<AppRootStateType, boolean>((state) => state.auth.isLogged)\r\n\r\n    return (\r\n        <>\r\n            {isLogged && (\r\n                <nav className={s.nav}>\r\n                    <div>\r\n                        <NavLink to={PATH.PROFILE} replace>\r\n                            <Avatar>\r\n                                <PermIdentityIcon />\r\n                            </Avatar>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.headerLink}>\r\n                        <div className={s.item}>\r\n                            <NavLink to={PATH.PROFILE} activeClassName={s.activeLink} replace>\r\n                                <Button variant=\"outlined\">\r\n                                    <PermIdentityIcon />\r\n                                    My Profile{\" \"}\r\n                                </Button>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className={s.item}>\r\n                            <NavLink to={PATH.PACKS} activeClassName={s.activeLink} replace>\r\n                                <Button variant=\"outlined\">\r\n                                    <PermIdentityIcon />\r\n                                    Packs\r\n                                </Button>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className={s.item}>\r\n                            <NavLink to={PATH.UPDATE_USER} activeClassName={s.activeLink} replace>\r\n                                <Button variant=\"outlined\">\r\n                                    <SettingsIcon /> Settings{\" \"}\r\n                                </Button>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className={s.item}>\r\n                            <NavLink to={PATH.NEW_PASS} activeClassName={s.activeLink} replace>\r\n                                <Button variant=\"outlined\">\r\n                                    <SettingsIcon /> new pass{\" \"}\r\n                                </Button>\r\n                            </NavLink>\r\n                        </div>\r\n                        <Logout />\r\n                    </div>\r\n                </nav>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect } from \"react\"\r\nimport { HashRouter, Redirect } from \"react-router-dom\"\r\nimport \"./App.css\"\r\nimport { PATH, Routes } from \"./routes/Routes\"\r\nimport Header from \"./header/Header\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { AppRootStateType } from \"../a2-bll/store/store\"\r\nimport Loading from \"./loading/Loading\"\r\nimport { isInitializedTC } from \"../a2-bll/store/appReducer\"\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useSelector<AppRootStateType, boolean>((state) => state.app.isInitialized)\r\n    const isLogged = useSelector<AppRootStateType, boolean>((state) => state.auth.isLogged)\r\n    useEffect(() => {\r\n        dispatch(isInitializedTC())\r\n    }, [])\r\n    if (!isInitialized) return <Loading />\r\n    return (\r\n        <HashRouter>\r\n            {!isLogged && <Redirect to={PATH.SIGN_IN} />}\r\n            <div className={\"mainPage\"}>\r\n                <Header />\r\n                <Routes />\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { cardPacksReducer } from \"./cardPacksReducer\"\r\nimport { combineReducers } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { configureStore } from \"@reduxjs/toolkit\"\r\nimport { appReducer } from \"./appReducer\"\r\nimport { cardsReducer } from \"./cardsReducer\"\r\nimport { authReducer } from \"./mainAuthReducer\"\r\ndeclare global {\r\n    interface Window {\r\n        store: any\r\n    }\r\n}\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    cardPacks: cardPacksReducer,\r\n    app: appReducer,\r\n    cards: cardsReducer,\r\n})\r\n// определить автоматически тип всего объекта состояния\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().prepend(thunk),\r\n})\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\nwindow.store = store\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './n1-main/a1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./n1-main/a2-bll/store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"SignIn_paper__3OOzW\",\"avatarConatiner\":\"SignIn_avatarConatiner__2_AXx\",\"avatar\":\"SignIn_avatar__2bvgE\",\"typographyContainer\":\"SignIn_typographyContainer__Je0UN\",\"form\":\"SignIn_form__1C_Fz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__2U9p-\",\"item\":\"Header_item__OvyLV\",\"activeLink\":\"Header_activeLink__J-tfk\",\"headerLink\":\"Header_headerLink__JaHlB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsBlock\":\"Cards_cardsBlock__Nq9bD\",\"body\":\"Cards_body__1THDi\",\"controlBlock\":\"Cards_controlBlock__2eMDI\",\"namePack\":\"Cards_namePack__3_oQL\",\"buttonBlock\":\"Cards_buttonBlock__12-MM\",\"userControl\":\"Cards_userControl__2-TgY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorBody\":\"SuperPaginator_paginatorBody__1brKD\",\"numberPageStyle\":\"SuperPaginator_numberPageStyle__2F3ca\",\"pageActive\":\"SuperPaginator_pageActive__2hk-A\",\"buttons\":\"SuperPaginator_buttons__1A4Ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authBlock\":\"CommonStylesForAuth_authBlock__exBWM\",\"inputBlock\":\"CommonStylesForAuth_inputBlock__2_2J5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Profile_root__3oCbM\",\"media\":\"Profile_media__3m7k-\",\"updateProfile\":\"Profile_updateProfile__31gj7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsPacksBlock\":\"CardsPacks_cardsPacksBlock__2uJFZ\",\"body\":\"CardsPacks_body__VMadS\",\"searchBlock\":\"CardsPacks_searchBlock__3WUeo\",\"table\":\"CardsPacks_table__1LD7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__eiBUH\",\"red\":\"SuperButton_red__2rcg3\",\"button\":\"SuperButton_button__1L-zn\",\"blink\":\"SuperButton_blink__1ylgH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__36X5A\",\"spanClassName\":\"SuperCheckbox_spanClassName__1lt84\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadPage\":\"Loading_loadPage__2XWob\",\"loader\":\"Loading_loader__Jv6tv\",\"rotate\":\"Loading_rotate__3BzCn\"};"],"sourceRoot":""}