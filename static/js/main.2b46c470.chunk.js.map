{"version":3,"sources":["n1-main/a1-ui/header/Header.module.css","n3-MySuperComponents/SuperButton/SuperButton.module.css","n2-features/b2-auth/sign-in-up/SignUp.module.css","n3-MySuperComponents/SuperInputText/SuperInputText.module.css","n3-MySuperComponents/SuperCheckbox/SuperCheckbox.module.css","n2-features/profile/Profile.tsx","n2-features/b4-errors/error/Error.tsx","n1-main/a3-dal/project-api.ts","n1-main/a2-bll/store/signUp-reducer.ts","n2-features/b2-auth/sign-in-up/SignUp.tsx","n3-MySuperComponents/SuperInputText/SuperInputText.tsx","n2-features/b3-pass/Password/NewPass.tsx","n2-features/b3-pass/Password/RenewalPass.tsx","n3-MySuperComponents/SuperButton/SuperButton.tsx","n1-main/a3-dal/login-api.ts","n1-main/a2-bll/store/login-reducer.ts","n3-MySuperComponents/SuperCheckbox/SuperCheckbox.tsx","n2-features/b2-auth/sign-in-up/SignInWithFormik.tsx","n1-main/a1-ui/routes/Routes.tsx","n1-main/a1-ui/header/Header.tsx","n1-main/a1-ui/App.tsx","reportWebVitals.ts","n1-main/a2-bll/store/reducers.ts","n1-main/a2-bll/store/store.ts","index.tsx"],"names":["module","exports","Profile","Error","instance","axios","create","baseURL","headers","signUpAPI","data","post","signInitialState","isRegistr","registrError","SWITCH_IS_REGISTR","SET_ERROR_REGISTR","setErrorRegistr","error","type","signUpTC","email","password","signUpData","dispatch","then","resp","addedUser","newValueIsRegistr","catch","SignUp","useSelector","state","signUp","useDispatch","formik","useFormik","initialValues","confPass","validate","values","errors","test","length","onSubmit","resetForm","to","className","styles","registrBlock","inputBlock","handleSubmit","placeholder","name","onChange","handleChange","value","style","color","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","key","NewPass","RenewalPass","SuperButton","red","finalClassName","default","authAPI","rememberMe","initState","isLogged","SuperCheckbox","onChangeChecked","children","checkbox","checked","SignInWithFormik","login","res","message","console","log","finally","PATH","PROFILE","getFieldProps","touched","SIGN_IN","SIGN_UP","NEW_PASS","RENEWAL_PASS","ERROR","Routes","path","exact","component","render","from","Header","nav","item","activeClassName","activeLink","replace","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","some","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b46c470.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__2U9p-\",\"item\":\"Header_item__OvyLV\",\"activeLink\":\"Header_activeLink__J-tfk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__eiBUH\",\"red\":\"SuperButton_red__2rcg3\",\"button\":\"SuperButton_button__1L-zn\",\"blink\":\"SuperButton_blink__1ylgH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrBlock\":\"SignUp_registrBlock__2eipM\",\"inputBlock\":\"SignUp_inputBlock__3Gv4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1v9gu\",\"errorInput\":\"SuperInputText_errorInput__hdBbv\",\"error\":\"SuperInputText_error__h1p0E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__36X5A\",\"spanClassName\":\"SuperCheckbox_spanClassName__1lt84\"};","import React from 'react'\r\n\r\n\r\nconst Profile = () =>{\r\n\r\n    return(\r\n        <div>\r\n            Your Profile\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react'\r\n\r\nconst Error = () => {\r\n\r\n    return(\r\n        <div>\r\n            <h1>\r\n\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Error","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:7542/2.0\",\r\n    headers: {},\r\n})\r\n\r\ntype signUpResponceType = {\r\n    addedUser: {}\r\n    error?: string\r\n}\r\ntype signUpDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport const signUpAPI = {\r\n    signUp(data: signUpDataType) {\r\n        return instance.post<signUpResponceType>(\"/auth/register\", data)\r\n    },\r\n}\r\n","import { Dispatch } from \"redux\"\r\nimport { signUpAPI } from \"../../a3-dal/project-api\"\r\n\r\ntype signStateType = {\r\n    isRegistr: boolean\r\n    registrError: string\r\n}\r\ntype switchIsAuthType = ReturnType<typeof switchIsRegistr>\r\ntype setErrorRegistrType = ReturnType<typeof setErrorRegistr>\r\ntype signUpActionType = setErrorRegistrType | switchIsAuthType\r\n\r\nconst signInitialState: signStateType = {\r\n    isRegistr: false,\r\n    registrError: \"\",\r\n}\r\n\r\nexport const signUpReduser = (\r\n    state = signInitialState,\r\n    action: signUpActionType\r\n): signStateType => {\r\n    switch (action.type) {\r\n        case SWITCH_IS_REGISTR:\r\n            return { ...state, isRegistr: action.newValueIsRegistr }\r\n        case SET_ERROR_REGISTR:\r\n            return { ...state, registrError: action.error }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst SWITCH_IS_REGISTR = \"SIGN-UP/SWITCH-IS-REGISTR\"\r\nconst SET_ERROR_REGISTR = \"SIGN-UP/SET-ERROR-REGISTR\"\r\n\r\nexport const switchIsRegistr = (newValueIsRegistr: boolean) => {\r\n    return { type: SWITCH_IS_REGISTR, newValueIsRegistr } as const\r\n}\r\nexport const setErrorRegistr = (error: any) => ({ type: SET_ERROR_REGISTR, error } as const)\r\n\r\nexport const signUpTC = (email: string, password: string) => {\r\n    const signUpData = { email, password }\r\n    return (dispatch: Dispatch<signUpActionType>) => {\r\n        signUpAPI\r\n            .signUp(signUpData)\r\n            .then((resp) => {\r\n                if (resp.data.addedUser) {\r\n                    dispatch(switchIsRegistr(true))\r\n                } else {\r\n                    dispatch(setErrorRegistr(resp.data.error))\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                dispatch(setErrorRegistr(\"Common error\"))\r\n            })\r\n    }\r\n}\r\n","import { useFormik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { signUpTC } from \"../../../n1-main/a2-bll/store/signUp-reducer\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport styles from \"./SignUp.module.css\"\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confPass?: string\r\n}\r\n\r\nconst SignUp = () => {\r\n    const isRegistr = useSelector<AppRootStateType, boolean>((state) => state.signUp.isRegistr)\r\n    const registrError = useSelector<AppRootStateType, string>((state) => state.signUp.registrError)\r\n    const dispatch = useDispatch()\r\n    const sendDataToRegistr = (email: string, password: string) => {\r\n        dispatch(signUpTC(email, password))\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            confPass: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = \"Email required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            } else if (values.password.length < 3) {\r\n                errors.password = \"Password should be longer 7 symbols\"\r\n            }\r\n            if (values.password !== values.confPass) {\r\n                errors.password = \"Password not identical\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            formik.resetForm()\r\n            sendDataToRegistr(values.email, values.password)\r\n        },\r\n    })\r\n    if (isRegistr) {\r\n        return <Redirect to={\"/sign-in\"} />\r\n    }\r\n    return (\r\n        <div className={styles.registrBlock}>\r\n            <form className={styles.inputBlock} onSubmit={formik.handleSubmit}>\r\n                <input\r\n                    placeholder=\"email:\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                {formik.errors.email && <div style={{ color: \"red\" }}>{formik.errors.email}</div>}\r\n                <input\r\n                    placeholder=\"password:\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n                <input\r\n                    placeholder=\"confirm password:\"\r\n                    name=\"confPass\"\r\n                    type=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.confPass}\r\n                />\r\n                {formik.errors.password && (\r\n                    <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n                )}\r\n                <button type={\"submit\"}>Sign up</button>\r\n                <div style={{ color: \"red\" }}>{registrError}</div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default SignUp\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React from 'react'\r\nimport SuperInputText from \"../../../n3-MySuperComponents/SuperInputText/SuperInputText\";\r\n\r\nconst NewPass = () => {\r\n\r\n    return(\r\n        <div>\r\n            <SuperInputText/>\r\n            New Pass\r\n        </div>\r\n    )\r\n}\r\nexport default NewPass","import React from 'react'\r\nimport SuperInputText from \"../../../n3-MySuperComponents/SuperInputText/SuperInputText\";\r\n\r\nconst RenewalPass = () => {\r\n\r\n    return(\r\n        <div>\r\n            <SuperInputText/>\r\n            Renew your Pass\r\n        </div>\r\n    )\r\n}\r\nexport default RenewalPass","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.default}${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >My BTN </button>\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL:'http://localhost:7542/2.0/'\r\n})\r\n\r\nexport const authAPI = {\r\n    login(email:string, password:string,rememberMe:boolean){\r\n        return instance.post<ResponseType<{body:loginResponseType}>>('auth/login',{email,password,rememberMe})\r\n    }\r\n}\r\nexport type LoginType={\r\n    email:string;\r\n    password:string;\r\n    rememberMe?:boolean;\r\n}\r\nexport type ResponseType<T={}> = {\r\n    error?:string;\r\n    body:loginResponseType\r\n}\r\ntype loginResponseType = {\r\n    id:string;\r\n    email:string;\r\n    avatar?:string;\r\n    publicCardPacksCount:number;\r\n    created: any;\r\n    updated:any;\r\n    isAdmin:boolean;\r\n    verified:boolean;\r\n    rememberMe:boolean;\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../a3-dal/login-api\";\r\ntype ActionType = LogInACType\r\ntype LogInACType = {\r\n    type:'login',\r\n    value: boolean\r\n}\r\n\r\ntype initStateType = {\r\n    isLogged:boolean\r\n    email:string,\r\n    password:string,\r\n    rememberMe: boolean\r\n}\r\nlet initState:initStateType = {\r\n    isLogged:false,\r\n    email:'',\r\n    password:'',\r\n    rememberMe: false\r\n}\r\n\r\nexport const loginReducer= (state:initStateType = initState,action:ActionType):initStateType => {\r\n    switch (action.type){\r\n        case'login':{\r\n            return {...state,isLogged:action.value}\r\n        }\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}\r\nexport const logInAC = (value:boolean) => {\r\n    return{\r\n        type:'login',\r\n        value\r\n    }\r\n}\r\n\r\nexport const LoginTC = (email:string, password:string,rememberMe:boolean) => (dispatch:Dispatch) => {\r\n    authAPI.login(email,password,rememberMe).then((res)=>{\r\n            dispatch(logInAC(true))\r\n    })\r\n        .catch((e)=>{\r\n            const error=e.res? e.res.data.error:\r\n                (e.message+', more details in the console')\r\n            console.log('Error:', {...e})\r\n        })\r\n        .finally(()=>{\r\n\r\n        })\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React from 'react'\r\nimport SuperButton from \"../../../n3-MySuperComponents/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../../n3-MySuperComponents/SuperInputText/SuperInputText\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LoginTC} from \"../../../n1-main/a2-bll/store/login-reducer\";\r\nimport SuperCheckbox from \"../../../n3-MySuperComponents/SuperCheckbox/SuperCheckbox\";\r\nimport {AppRootStateType} from \"../../../n1-main/a2-bll/store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../n1-main/a1-ui/routes/Routes\";\r\nimport {useFormik} from \"formik\";\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nconst SignInWithFormik = () => {\r\n    const dispatch=useDispatch()\r\n    const isLogged = useSelector<AppRootStateType,boolean>(state => state.login.isLogged)\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate:(values )=> {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if(!values.password){\r\n                errors.password = 'Password required'\r\n            }else if(values.password.length < 4){\r\n                errors.password = 'Invalid password'\r\n            }\r\n            return errors;\r\n        },\r\n            onSubmit: values => {\r\n        dispatch(LoginTC(values.email,values.password,values.rememberMe))\r\n        formik.resetForm();\r\n    },\r\n})\r\nif(isLogged){\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n    return(\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                <SuperInputText placeholder={'Username or email'} type={'email'}  {...formik.getFieldProps('email')}/>\r\n            </div>\r\n            {formik.touched.email&& formik.errors.email && <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n\r\n            <div>\r\n                <SuperInputText placeholder={'password'} type={'password'} {...formik.getFieldProps('password')}/>\r\n            </div>\r\n            {formik.touched.password&& formik.errors.password && <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n            <div>\r\n                <SuperCheckbox type={'rememberMe'} {...formik.getFieldProps('rememberMe')}/>\r\n            </div>\r\n\r\n            <SuperButton type={\"submit\"} >\r\n                Sign in HERE\r\n            </SuperButton>\r\n\r\n        </form>\r\n    )\r\n}\r\nexport default SignInWithFormik","import {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Profile from \"../../../n2-features/profile/Profile\";\r\nimport Error from \"../../../n2-features/b4-errors/error/Error\";\r\nimport SignIn from \"../../../n2-features/b2-auth/sign-in-up/SignIn\";\r\nimport SignUp from \"../../../n2-features/b2-auth/sign-in-up/SignUp\";\r\nimport NewPass from \"../../../n2-features/b3-pass/Password/NewPass\";\r\nimport RenewalPass from \"../../../n2-features/b3-pass/Password/RenewalPass\";\r\nimport React from \"react\";\r\nimport SignInWithFormik from \"../../../n2-features/b2-auth/sign-in-up/SignInWithFormik\";\r\n\r\nexport const PATH = {\r\n    PROFILE:'/profile',\r\n    SIGN_IN:'/sign-in',\r\n    SIGN_UP:'/sign-up',\r\n    NEW_PASS:'/new-pass',\r\n    RENEWAL_PASS:'/renewal-pass',\r\n    ERROR:'/404'\r\n\r\n}\r\nexport const Routes = () => {\r\n\r\n    return(\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact component={Profile}/>\r\n                <Route path={PATH.PROFILE} component={Profile}/>\r\n                <Route path={PATH.PROFILE} component={Error}/>\r\n                <Route path={PATH.SIGN_IN} component={SignInWithFormik}/>\r\n                <Route path={PATH.SIGN_UP} component={SignUp}/>\r\n                <Route path={PATH.NEW_PASS} component={NewPass}/>\r\n                <Route path={PATH.RENEWAL_PASS} component={RenewalPass}/>\r\n                <Route path={'/404'} render={() => <h1>404:PAGE NOT FOUND</h1>}/>\r\n                <Redirect from={'*'} to={PATH.ERROR}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport {PATH} from \"../routes/Routes\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PROFILE} activeClassName={s.activeLink} replace> My Profile </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.SIGN_IN} activeClassName={s.activeLink} replace>sign-in</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.SIGN_UP} activeClassName={s.activeLink} replace>sign-up</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.NEW_PASS} activeClassName={s.activeLink} replace>new Pass</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.RENEWAL_PASS} activeClassName={s.activeLink} replace>Get the new Pass</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport './App.css';\r\nimport {Routes} from \"./routes/Routes\";\r\nimport Header from \"./header/Header\";\r\n\r\nfunction App() {\r\n    return (\r\n        <HashRouter>\r\n            <div className={'mainPage'}>\r\n                <Header/>\r\n                <Routes/>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type initStateType = {\r\n\r\n}\r\nlet initState:initStateType = {\r\n\r\n}\r\n\r\nexport const someReducer = (state:initStateType = initState,action:actionType) => {\r\n    switch (action.type){\r\n        case'some':{\r\n            return state\r\n        }\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}\r\nexport const someAC = () => {\r\n    return{\r\n        type:'some'\r\n    }\r\n}\r\ntype actionType = ReturnType<typeof someAC>","import {applyMiddleware, combineReducers,createStore} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {someReducer} from \"./reducers\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {signUpReduser} from \"./signUp-reducer\";\r\ndeclare global {\r\n    interface Window {store: any}\r\n}\r\nconst rootReducer = combineReducers({\r\n    some:someReducer,\r\n    login:loginReducer,\r\n    signUp:signUpReduser\r\n})\r\nexport const store = createStore(rootReducer,applyMiddleware(thunkMiddleware));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\nwindow.store = store\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './n1-main/a1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./n1-main/a2-bll/store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}