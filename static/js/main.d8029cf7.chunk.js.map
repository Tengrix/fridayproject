{"version":3,"sources":["utils/styles/CommonStylesForAuth.module.css","n3-MySuperComponents/SuperButton/SuperButton.module.css","n3-MySuperComponents/SuperInputText/SuperInputText.module.css","n3-MySuperComponents/SuperCheckbox/SuperCheckbox.module.css","n1-main/a3-dal/mainAPI.ts","n1-main/a2-bll/store/mainAuthReducer.ts","n2-features/profile/Profile.tsx","n2-features/b4-errors/error/Error.tsx","n3-MySuperComponents/SuperInputText/SuperInputText.tsx","n2-features/b3-pass/Password/RenewalPass.tsx","n3-MySuperComponents/SuperButton/SuperButton.tsx","n3-MySuperComponents/SuperCheckbox/SuperCheckbox.tsx","n2-features/b2-auth/sign-in-up/SignIn.tsx","n2-features/b2-auth/sign-in-up/SignUp.tsx","n2-features/b3-pass/Password/NewPass.tsx","n2-features/profile/UpdateProfile.tsx","n1-main/a1-ui/routes/Routes.tsx","n2-features/b2-auth/sign-in-up/Logout.tsx","n1-main/a1-ui/header/Header.tsx","n1-main/a1-ui/App.tsx","reportWebVitals.ts","n1-main/a2-bll/store/store.ts","index.tsx","n1-main/a1-ui/header/Header.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","data","delete","put","resetPasswordToken","initState","isLogged","user","id","name","avatar","isRegister","commonError","isUpdatedPassword","isInitialized","updatedUser","SWITCH_IS_REGISTR","SET_ERROR_REGISTR","SET_USER","SIGN_IN","SET_UPDATE_USER","SET_NEW_PASSWORD","IS_INITIALIZED","setCommonRegister","error","type","logIn","value","signUpTC","signUpData","dispatch","then","resp","addedUser","newValueIsRegister","catch","GetUserTC","res","setUser","UpdateUserInfo","setUpdateUser","isInitializedTC","finally","SetNewPassword","newPassword","length","isUpPassword","Profile","useDispatch","userName","useSelector","state","auth","userEmail","userAvatar","useEffect","src","alt","to","PATH","Error","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","key","RenewalPass","styles","authBlock","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","SignInWithFormik","formik","useFormik","initialValues","validate","values","errors","test","onSubmit","message","console","log","resetForm","PROFILE","handleSubmit","inputBlock","placeholder","getFieldProps","touched","style","color","RENEWAL_PASS","SignUp","confPass","handleChange","NewPass","token","useParams","UpdateProfile","oldName","oldAva","useState","setNewName","setNewAva","newData","SIGN_UP","NEW_PASS","ERROR","UPDATE_USER","Routes","path","exact","component","render","from","Logout","logoutHandler","useCallback","info","onClick","Header","nav","logOut","item","activeClassName","activeLink","replace","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8029cf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"authBlock\":\"CommonStylesForAuth_authBlock__exBWM\",\"inputBlock\":\"CommonStylesForAuth_inputBlock__2_2J5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__eiBUH\",\"red\":\"SuperButton_red__2rcg3\",\"button\":\"SuperButton_button__1L-zn\",\"blink\":\"SuperButton_blink__1ylgH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1v9gu\",\"errorInput\":\"SuperInputText_errorInput__hdBbv\",\"error\":\"SuperInputText_error__h1p0E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__36X5A\",\"spanClassName\":\"SuperCheckbox_spanClassName__1lt84\"};","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<ResponseType<{ body: loginResponseType }>>(\"auth/login\", {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n        })\r\n    },\r\n    getProfile() {\r\n        return instance.post<userType>(\"auth/me\")\r\n    },\r\n    signUp(data: signUpDataType) {\r\n        return instance.post<signUpResponseType>(\"auth/register\", data)\r\n    },\r\n    logout() {\r\n        return instance.delete<logoutResponseType>(\"auth/me\")\r\n    },\r\n    updateUser(data:NewUserType) {\r\n        return instance.put<updatedUserResponseType>(\"auth/me\", data)\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<SendNewPassResponseType>(\"auth/set-new-password\", { password, resetPasswordToken })\r\n    },\r\n}\r\n\r\nexport type NewUserType = {\r\n    name: string\r\n    avatar: string\r\n}\r\ntype updatedUserResponseType = {\r\n    updatedUser: {}\r\n    error?: string\r\n}\r\ntype logoutResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\ntype SendNewPassResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\ntype signUpResponseType = {\r\n    addedUser: {}\r\n    error?: string\r\n}\r\ntype signUpDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type LoginType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n}\r\nexport type SignInType<T = {}> = {\r\n    data: signUpDataType\r\n    rememberMe: boolean\r\n}\r\nexport type userType = {\r\n    id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type ResponseType<T = {}> = {\r\n    error?: string\r\n    body: loginResponseType\r\n}\r\ntype loginResponseType = {\r\n    data: userType\r\n    created: any\r\n    updated: any\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n}\r\n","import { Dispatch } from \"redux\"\r\nimport {authAPI, NewUserType, userType} from \"../../a3-dal/mainAPI\"\r\n//\r\n//\r\ntype ActionType =\r\n    | LogInACType\r\n    | setUserType\r\n    | switchIsAuthType\r\n    | setErrorRegisterType\r\n    | updatedUserType\r\n    | setNewPasswordType\r\n    | isInitializedType\r\n\r\n\r\n//\r\n//\r\ntype switchIsAuthType = ReturnType<typeof switchIsRegister>\r\ntype setErrorRegisterType = ReturnType<typeof setCommonRegister>\r\ntype LogInACType = ReturnType<typeof logIn>\r\ntype setUserType = ReturnType<typeof setUser>\r\ntype updatedUserType = ReturnType<typeof setUpdateUser>\r\ntype setNewPasswordType = ReturnType<typeof setNewPassword>\r\ntype isInitializedType = ReturnType<typeof isInitialized>\r\ntype initStateType = {\r\n    isLogged: boolean\r\n    user: userType\r\n    isRegister: boolean\r\n    commonError: string\r\n    isUpdatedPassword: boolean,\r\n    isInitialized: boolean\r\n    updatedUser:NewUserType\r\n}\r\n//\r\n//\r\nlet initState: initStateType = {\r\n    isLogged: false,\r\n    user: {\r\n        id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: \"\",\r\n    },\r\n    isRegister: false,\r\n    commonError: \"\",\r\n    isUpdatedPassword: false,\r\n    isInitialized:false,\r\n    updatedUser:{\r\n        name:'',\r\n        avatar:''\r\n    }\r\n}\r\n\r\nexport const authReducer = (\r\n    state: initStateType = initState,\r\n    action: ActionType\r\n): initStateType => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return { ...state, isLogged: action.value }\r\n        case SET_USER:\r\n            return { ...state, user: action.user,  }\r\n        case SWITCH_IS_REGISTR:\r\n            return { ...state, isRegister: action.newValueIsRegister }\r\n        case SET_ERROR_REGISTR:\r\n            return { ...state, commonError: action.error }\r\n        case SET_UPDATE_USER:\r\n            return { ...state, updatedUser: action.data }\r\n        case IS_INITIALIZED:\r\n            return {...state, isInitialized:action.value }\r\n        case SET_NEW_PASSWORD:\r\n            return { ...state, isUpdatedPassword: action.isUpPassword }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n//\r\n//\r\nconst SWITCH_IS_REGISTR = \"AUTH/SWITCH-IS-REGISTR\"\r\nconst SET_ERROR_REGISTR = \"AUTH/SET-ERROR-REGISTR\"\r\nconst SET_USER = \"AUTH/SET-USER\"\r\nconst SIGN_IN = \"AUTH/SIGN-IN\"\r\nconst SET_UPDATE_USER = \"AUTH/SET-UPDATE-USER\"\r\nconst SET_NEW_PASSWORD = \"AUTH/SET-NEW-PASSWORD\"\r\nconst IS_INITIALIZED = 'IS-INITIALIZED'\r\n//\r\n//\r\nexport const switchIsRegister = (newValueIsRegister: boolean) => {\r\n    return { type: SWITCH_IS_REGISTR, newValueIsRegister } as const\r\n}\r\nexport const setCommonRegister = (error: any) => ({ type: SET_ERROR_REGISTR, error } as const)\r\n\r\nexport const logIn = (value: boolean) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        value,\r\n    } as const\r\n}\r\nexport const setUser = (id: string, email: string, name: string, avatar: string) => {\r\n    return {\r\n        type: SET_USER,\r\n        user: { id, email, name, avatar },\r\n    } as const\r\n}\r\nexport const setUpdateUser = (data: NewUserType) => {\r\n    return {\r\n        type: SET_UPDATE_USER,\r\n        data,\r\n    } as const\r\n}\r\nexport const setNewPassword = (isUpPassword: boolean) =>\r\n    ({\r\n        type: SET_NEW_PASSWORD,\r\n        isUpPassword,\r\n    } as const)\r\nexport const isInitialized = (value:boolean) =>{\r\n    return{\r\n        type:IS_INITIALIZED,\r\n        value\r\n    } as const\r\n}\r\n//\r\n//\r\nexport const signUpTC = (email: string, password: string) => {\r\n    const signUpData = { email, password }\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        authAPI\r\n            .signUp(signUpData)\r\n            .then((resp) => {\r\n                if (resp.data.addedUser) {\r\n                    dispatch(switchIsRegister(true))\r\n                } else {\r\n                    dispatch(setCommonRegister(resp.data.error))\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                dispatch(setCommonRegister(\"Common error\"))\r\n            })\r\n    }\r\n}\r\n\r\nexport const LoginTC =\r\n    (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionType>) => {\r\n        authAPI\r\n            .login(email, password, rememberMe)\r\n            .then((res) => {\r\n                dispatch(logIn(true))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n                console.log(\"Error:\", { ...e })\r\n            })\r\n            .finally(() => {})\r\n    }\r\nexport const LogoutTC = () => (dispatch: Dispatch) => {\r\n    authAPI\r\n        .logout()\r\n        .then((res) => {\r\n            if (res.data.info) {\r\n                dispatch(logIn(false))\r\n            }\r\n        })\r\n        .catch(() => {})\r\n}\r\nexport const GetUserTC = () => (dispatch: Dispatch<setUserType>) => {\r\n    authAPI.getProfile().then((res) => {\r\n        let { id, email, name, avatar } = res.data\r\n        dispatch(setUser(id, email, name, avatar,))\r\n    })\r\n}\r\nexport const UpdateUserInfo = (data: NewUserType) => (dispatch: Dispatch) => {\r\n    authAPI.updateUser(data).then((res) => {\r\n        dispatch(setUpdateUser(data))\r\n    })\r\n}\r\nexport const isInitializedTC = () => (dispatch:Dispatch) =>{\r\n    authAPI.getProfile().then((res)=>{\r\n            dispatch(logIn(true))\r\n    }).catch(()=>{\r\n\r\n    }).finally(()=>{\r\n        dispatch(isInitialized(true))\r\n    })\r\n}\r\nexport const SetNewPassword =\r\n    (newPassword: string, resetPasswordToken: string) => (dispatch: Dispatch) => {\r\n        authAPI.setNewPassword(newPassword, resetPasswordToken).then((res) => {\r\n            if (res.data.error.length === 0) {\r\n                dispatch(setNewPassword(true))\r\n            } else {\r\n                dispatch(setCommonRegister(res.data.error))\r\n            }\r\n        })\r\n    }\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../n1-main/a2-bll/store/store\";\r\nimport {GetUserTC} from \"../../n1-main/a2-bll/store/mainAuthReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../n1-main/a1-ui/routes/Routes\";\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const userName = useSelector<AppRootStateType, string>(state => state.auth.user.name)\r\n    const userEmail = useSelector<AppRootStateType, string>(state => state.auth.user.email)\r\n    const userAvatar = useSelector<AppRootStateType, string | undefined>(state => state.auth.user.avatar)\r\n    const isLogged = useSelector<AppRootStateType, boolean>(state => state.auth.isLogged)\r\n    useEffect(()=>{\r\n        dispatch(GetUserTC())\r\n    },[dispatch])\r\n\r\n    if (!isLogged) {\r\n        return <Redirect to={PATH.SIGN_IN}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={userAvatar} alt=\"\"/>\r\n            </div>\r\n            <div>\r\n                {userName}\r\n            </div>\r\n            <div>\r\n                {userEmail}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react'\r\n\r\nconst Error = () => {\r\n\r\n    return(\r\n        <div>\r\n            <h1>\r\n\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Error","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React from 'react'\r\nimport SuperInputText from \"../../../n3-MySuperComponents/SuperInputText/SuperInputText\";\r\nimport styles from \"../../../utils/styles/CommonStylesForAuth.module.css\"\r\n\r\nconst RenewalPass = () => {\r\n\r\n    return(\r\n        <div className={styles.authBlock}>\r\n            <SuperInputText/>\r\n            Renew your Pass\r\n        </div>\r\n    )\r\n}\r\nexport default RenewalPass","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.default}${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >LogIn </button>\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React from \"react\"\r\nimport SuperButton from \"../../../n3-MySuperComponents/SuperButton/SuperButton\"\r\nimport SuperInputText from \"../../../n3-MySuperComponents/SuperInputText/SuperInputText\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { LoginTC } from \"../../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport SuperCheckbox from \"../../../n3-MySuperComponents/SuperCheckbox/SuperCheckbox\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport { NavLink, Redirect } from \"react-router-dom\"\r\nimport { PATH } from \"../../../n1-main/a1-ui/routes/Routes\"\r\nimport { useFormik } from \"formik\"\r\nimport styles from \"../../../utils/styles/CommonStylesForAuth.module.css\"\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nconst SignInWithFormik = () => {\r\n    const dispatch = useDispatch()\r\n    const isLogged = useSelector<AppRootStateType, boolean>((state) => state.auth.isLogged)\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = \"Email required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            } else if (values.password.length < 4) {\r\n                errors.password = \"Invalid password\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(LoginTC(values.email, values.password, values.rememberMe))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    if (isLogged) {\r\n        return <Redirect to={PATH.PROFILE} />\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={styles.authBlock}>\r\n            <div className={styles.inputBlock}>\r\n                <div>\r\n                    <SuperInputText\r\n                        placeholder={\"Username or email\"}\r\n                        type={\"email\"}\r\n                        {...formik.getFieldProps(\"email\")}\r\n                    />\r\n                </div>\r\n                {formik.touched.email && formik.errors.email && (\r\n                    <div style={{ color: \"red\" }}>{formik.errors.email}</div>\r\n                )}\r\n\r\n                <div>\r\n                    <SuperInputText\r\n                        placeholder={\"password\"}\r\n                        type={\"password\"}\r\n                        {...formik.getFieldProps(\"password\")}\r\n                    />\r\n                </div>\r\n                {formik.touched.password && formik.errors.password && (\r\n                    <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n                )}\r\n                <div>\r\n                    <SuperCheckbox type={\"rememberMe\"} {...formik.getFieldProps(\"rememberMe\")} />\r\n                </div>\r\n\r\n                <SuperButton type={\"submit\"}>Sign in HERE</SuperButton>\r\n                <div>\r\n                    <NavLink to={PATH.RENEWAL_PASS}>Forgot password</NavLink>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default SignInWithFormik\r\n","import { useFormik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {  Redirect } from \"react-router-dom\"\r\nimport { signUpTC } from \"../../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport styles from \"../../../utils/styles/CommonStylesForAuth.module.css\"\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confPass?: string\r\n}\r\n\r\nconst SignUp = () => {\r\n    const isRegister = useSelector<AppRootStateType, boolean>((state) => state.auth.isRegister)\r\n    const commonError = useSelector<AppRootStateType, string>((state) => state.auth.commonError)\r\n    const dispatch = useDispatch()\r\n    const sendDataToRegister = (email: string, password: string) => {\r\n        dispatch(signUpTC(email, password))\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            confPass: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = \"Email required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            } else if (values.password.length < 7) {\r\n                errors.password = \"Password should be longer 7 symbols\"\r\n            }\r\n            if (values.password !== values.confPass) {\r\n                errors.password = \"Password not identical\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            formik.resetForm()\r\n            sendDataToRegister(values.email, values.password)\r\n        },\r\n    })\r\n    if (isRegister) {\r\n        return <Redirect to={\"/sign-in\"} />\r\n    }\r\n    return (\r\n        <div className={styles.authBlock}>\r\n            <form className={styles.inputBlock} onSubmit={formik.handleSubmit}>\r\n                <input\r\n                    placeholder=\"email:\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                {formik.errors.email && <div style={{ color: \"red\" }}>{formik.errors.email}</div>}\r\n                <input\r\n                    placeholder=\"password:\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n                <input\r\n                    placeholder=\"confirm password:\"\r\n                    name=\"confPass\"\r\n                    type=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.confPass}\r\n                />\r\n                {formik.errors.password && (\r\n                    <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n                )}\r\n                <button type={\"submit\"}>Sign up</button>\r\n\r\n                <div style={{ color: \"red\" }}>{commonError}</div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default SignUp\r\n","import { useFormik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect, useParams } from \"react-router-dom\"\r\nimport { SetNewPassword } from \"../../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport styles from \"../../../utils/styles/CommonStylesForAuth.module.css\"\r\n\r\ntype FormikErrorType = {\r\n    password?: string\r\n    confPass?: string\r\n}\r\n\r\nconst NewPass = () => {\r\n    const isUpdatedPassword = useSelector<AppRootStateType, boolean>(\r\n        (state) => state.auth.isUpdatedPassword\r\n    )\r\n    const commonError = useSelector<AppRootStateType, string>((state) => state.auth.commonError)\r\n    const dispatch = useDispatch()\r\n    const token = useParams<{ token: string }>()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: \"\",\r\n            confPass: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (values.password.length < 7) {\r\n                errors.password = \"Password should be longer 7 symbols\"\r\n            }\r\n            if (values.password !== values.confPass) {\r\n                errors.password = \"Password not identical\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            formik.resetForm()\r\n            dispatch(SetNewPassword(values.password, token.token))\r\n        },\r\n    })\r\n    if (isUpdatedPassword) {\r\n        return <Redirect to={\"/sign-in\"} />\r\n    }\r\n    return (\r\n        <div className={styles.authBlock}>\r\n            <form onSubmit={formik.handleSubmit} className={styles.inputBlock}>\r\n                <input\r\n                    placeholder=\"password:\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n                <input\r\n                    placeholder=\"confirm password:\"\r\n                    name=\"confPass\"\r\n                    type=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.confPass}\r\n                />\r\n                {formik.errors.password && (\r\n                    <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n                )}\r\n                <button type={\"submit\"}>Change password</button>\r\n                <div style={{ color: \"red\" }}>{commonError}</div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default NewPass\r\n","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../n1-main/a2-bll/store/store\";\r\nimport {UpdateUserInfo} from \"../../n1-main/a2-bll/store/mainAuthReducer\";\r\nimport {NewUserType} from \"../../n1-main/a3-dal/mainAPI\";\r\n\r\nconst UpdateProfile = () => {\r\n    const dispatch = useDispatch()\r\n    const oldName = useSelector<AppRootStateType,string>(state => state.auth.user.name)\r\n    const oldAva = useSelector<AppRootStateType,string>(state => state.auth.user.avatar)\r\n    const[name, setNewName] = useState<string>(oldName)\r\n    const[avatar, setNewAva] = useState<string>(oldAva)\r\n    const newData:NewUserType = {name,avatar}\r\n    useEffect(()=>{\r\n        dispatch(UpdateUserInfo(newData))\r\n    },[newData])\r\n\r\n    const onChangeName = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        setNewName(e.currentTarget.value)\r\n    }\r\n    const onChangeAva = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        setNewAva(e.currentTarget.value)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input placeholder={'new name'} value={name} type=\"text\" onChange={onChangeName}/>\r\n            <input placeholder={'new URL for Ava'} value={avatar} type=\"text\" onChange={onChangeAva}/>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateProfile","import {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Profile from \"../../../n2-features/profile/Profile\";\r\nimport Error from \"../../../n2-features/b4-errors/error/Error\";\r\nimport React from \"react\";\r\nimport RenewalPass from \"../../../n2-features/b3-pass/Password/RenewalPass\";\r\nimport SignInWithFormik from \"../../../n2-features/b2-auth/sign-in-up/SignIn\";\r\nimport SignUp from \"../../../n2-features/b2-auth/sign-in-up/SignUp\";\r\nimport NewPass from \"../../../n2-features/b3-pass/Password/NewPass\";\r\nimport UpdateProfile from \"../../../n2-features/profile/UpdateProfile\";\r\n\r\nexport const PATH = {\r\n    PROFILE:'/profile',\r\n    SIGN_IN:'/sign-in',\r\n    SIGN_UP:'/sign-up',\r\n    NEW_PASS:'/new-pass',\r\n    RENEWAL_PASS:'/renewal-pass',\r\n    ERROR:'/404',\r\n    UPDATE_USER:'/update-user'\r\n\r\n}\r\nexport const Routes = () => {\r\n\r\n    return(\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact component={Profile}/>\r\n                <Route path={PATH.PROFILE} component={Profile}/>\r\n                <Route path={PATH.PROFILE} component={Error}/>\r\n                <Route path={PATH.SIGN_IN} component={SignInWithFormik}/>\r\n                <Route path={PATH.SIGN_UP} component={SignUp}/>\r\n                <Route path={PATH.NEW_PASS} component={NewPass}/>\r\n                <Route path={PATH.RENEWAL_PASS} component={RenewalPass}/>\r\n                <Route path={PATH.UPDATE_USER} component={UpdateProfile}/>\r\n                <Route path={'/404'} render={() => <h1>404:PAGE NOT FOUND</h1>}/>\r\n                <Redirect from={'*'} to={PATH.ERROR}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React, { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { LogoutTC } from '../../../n1-main/a2-bll/store/mainAuthReducer';\r\nconst Logout = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(LogoutTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={logoutHandler}>Logout</button>\r\n            Logout in Here\r\n        </div>\r\n    )\r\n}\r\nexport default Logout","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport {PATH} from \"../routes/Routes\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../a2-bll/store/store\";\r\nimport Logout from \"../../../n2-features/b2-auth/sign-in-up/Logout\";\r\n\r\nfunction Header() {\r\n    const isLogged = useSelector<AppRootStateType, boolean>(state => state.auth.isLogged)\r\n    return (\r\n        <nav className={s.nav}>\r\n            <span className={s.logOut}>\r\n                {isLogged && <Logout/>}\r\n            </span>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.UPDATE_USER} activeClassName={s.activeLink} replace> Settings </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PROFILE} activeClassName={s.activeLink} replace> My Profile </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.SIGN_IN} activeClassName={s.activeLink} replace>sign-in</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.SIGN_UP} activeClassName={s.activeLink} replace>sign-up</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.NEW_PASS} activeClassName={s.activeLink} replace>new Pass</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.RENEWAL_PASS} activeClassName={s.activeLink} replace>Get the new Pass</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {useEffect} from 'react';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport './App.css';\r\nimport {Routes} from \"./routes/Routes\";\r\nimport Header from \"./header/Header\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../a2-bll/store/store\";\r\nimport { isInitializedTC} from \"../a2-bll/store/mainAuthReducer\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useSelector<AppRootStateType,boolean>(state => state.auth.isInitialized)\r\n    useEffect(()=>{\r\n        dispatch(isInitializedTC())\r\n    },[])\r\n\r\n    if(!isInitialized){\r\n        return <div>Loading</div>\r\n    }\r\n    return (\r\n        <HashRouter>\r\n            <div className={'mainPage'}>\r\n                <Header/>\r\n                <Routes/>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers,createStore} from 'redux';\r\nimport {authReducer} from \"./mainAuthReducer\";\r\nimport thunk from \"redux-thunk\";\r\ndeclare global {\r\n    interface Window {store: any}\r\n}\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer\r\n})\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\nwindow.store = store\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './n1-main/a1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./n1-main/a2-bll/store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__2U9p-\",\"item\":\"Header_item__OvyLV\",\"activeLink\":\"Header_activeLink__J-tfk\",\"logOut\":\"Header_logOut__rrsbp\"};"],"sourceRoot":""}