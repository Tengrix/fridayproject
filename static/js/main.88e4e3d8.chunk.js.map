{"version":3,"sources":["utils/styles/CommonStylesForAuth.module.css","n3-MySuperComponents/SuperButton/SuperButton.module.css","n3-MySuperComponents/SuperInputText/SuperInputText.module.css","n3-MySuperComponents/SuperCheckbox/SuperCheckbox.module.css","n1-main/a3-dal/mainAPI.ts","n1-main/a2-bll/store/mainAuthReducer.ts","n2-features/profile/Profile.tsx","n2-features/b4-errors/error/Error.tsx","n2-features/b3-pass/Password/RenewalPass.tsx","n3-MySuperComponents/SuperButton/SuperButton.tsx","n3-MySuperComponents/SuperInputText/SuperInputText.tsx","n3-MySuperComponents/SuperCheckbox/SuperCheckbox.tsx","n2-features/b2-auth/sign-in-up/SignIn.tsx","n2-features/b2-auth/sign-in-up/SignUp.tsx","n2-features/b3-pass/Password/NewPass.tsx","n2-features/profile/UpdateProfile.tsx","n1-main/a1-ui/routes/Routes.tsx","n2-features/b2-auth/sign-in-up/Logout.tsx","n1-main/a1-ui/header/Header.tsx","n1-main/a1-ui/App.tsx","reportWebVitals.ts","n1-main/a2-bll/store/store.ts","index.tsx","n1-main/a1-ui/header/Header.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","data","delete","put","message","resetPasswordToken","initState","isLogged","user","id","name","avatar","isRegister","commonError","isUpdatedPassword","fogot","isInitialized","updatedUser","SWITCH_IS_REGISTR","SET_ERROR_REGISTR","SET_USER","SIGN_IN","SET_UPDATE_USER","SET_NEW_PASSWORD","SWITCH_FOGOT","IS_INITIALIZED","setCommonRegister","error","type","logIn","value","signUpTC","signUpData","dispatch","then","resp","addedUser","newValueIsRegister","catch","GetUserTC","res","setUser","UpdateUserInfo","setUpdateUser","finally","console","log","isInitializedTC","forgot","newFogot","SetNewPassword","newPassword","length","isUpPassword","Profile","useDispatch","userName","useSelector","state","auth","userEmail","userAvatar","useEffect","src","alt","to","PATH","Error","RenewalPass","formik","useFormik","initialValues","validate","values","onSubmit","resetForm","className","styles","authBlock","handleSubmit","placeholder","onChange","handleChange","SuperButton","red","restProps","finalClassName","s","default","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","e","currentTarget","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SignInWithFormik","errors","test","PROFILE","inputBlock","getFieldProps","touched","style","color","RENEWAL_PASS","SignUp","confPass","NewPass","token","useParams","UpdateProfile","oldName","oldAva","useState","setNewName","setNewAva","newData","onClick","SIGN_UP","NEW_PASS","ERROR","UPDATE_USER","Routes","path","exact","component","render","from","Logout","logoutHandler","useCallback","info","Header","nav","logOut","item","activeClassName","activeLink","replace","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88e4e3d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"authBlock\":\"CommonStylesForAuth_authBlock__15zKS\",\"inputBlock\":\"CommonStylesForAuth_inputBlock__20tX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__18Len\",\"red\":\"SuperButton_red__3BY6U\",\"button\":\"SuperButton_button__1Ymxf\",\"blink\":\"SuperButton_blink__3T8lZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Gc67\",\"errorInput\":\"SuperInputText_errorInput__2sjb_\",\"error\":\"SuperInputText_error__1oSiw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2dgcj\",\"spanClassName\":\"SuperCheckbox_spanClassName__3r9pY\"};","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<ResponseType<{ body: loginResponseType }>>(\"auth/login\", {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n        })\r\n    },\r\n    getProfile() {\r\n        return instance.post<userType>(\"auth/me\")\r\n    },\r\n    signUp(data: signUpDataType) {\r\n        return instance.post<signUpResponseType>(\"auth/register\", data)\r\n    },\r\n    logout() {\r\n        return instance.delete<logoutResponseType>(\"auth/me\")\r\n    },\r\n    updateUser(data: NewUserType) {\r\n        return instance.put<updatedUserResponseType>(\"auth/me\", data)\r\n    },\r\n    forgot(email: string, message: string) {\r\n        return instance.post(\"auth/forgot\", {email, message})\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<SendNewPassResponseType>(\"auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken,\r\n        })\r\n    },\r\n}\r\n\r\nexport type NewUserType = {\r\n    name: string\r\n    avatar: string\r\n}\r\ntype updatedUserResponseType = {\r\n    updatedUser: {}\r\n    error?: string\r\n}\r\ntype logoutResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\ntype SendNewPassResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\ntype signUpResponseType = {\r\n    addedUser: {}\r\n    error?: string\r\n}\r\ntype signUpDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type LoginType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n}\r\nexport type SignInType<T = {}> = {\r\n    data: signUpDataType\r\n    rememberMe: boolean\r\n}\r\nexport type userType = {\r\n    id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type ResponseType<T = {}> = {\r\n    error?: string\r\n    body: loginResponseType\r\n}\r\ntype loginResponseType = {\r\n    data: userType\r\n    created: any\r\n    updated: any\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n}\r\n","import { Dispatch } from \"redux\"\r\nimport { authAPI, NewUserType, userType } from \"../../a3-dal/mainAPI\"\r\n//\r\n//\r\ntype ActionType =\r\n    | LogInACType\r\n    | setUserType\r\n    | switchIsAuthType\r\n    | setErrorRegisterType\r\n    | updatedUserType\r\n    | setNewPasswordType\r\n    | isInitializedType\r\n    | switchFogotType\r\n//\r\n//\r\ntype switchIsAuthType = ReturnType<typeof switchIsRegister>\r\ntype setErrorRegisterType = ReturnType<typeof setCommonRegister>\r\ntype LogInACType = ReturnType<typeof logIn>\r\ntype setUserType = ReturnType<typeof setUser>\r\ntype updatedUserType = ReturnType<typeof setUpdateUser>\r\ntype setNewPasswordType = ReturnType<typeof setNewPassword>\r\ntype isInitializedType = ReturnType<typeof isInitialized>\r\ntype switchFogotType = ReturnType<typeof switchFogot>\r\n//\r\n//\r\ntype initStateType = {\r\n    isLogged: boolean\r\n    user: userType\r\n    isRegister: boolean\r\n    commonError: string\r\n    isUpdatedPassword: boolean\r\n    fogot: boolean\r\n    isInitialized: boolean\r\n    updatedUser: NewUserType\r\n}\r\n//\r\n//\r\nlet initState: initStateType = {\r\n    isLogged: false,\r\n    user: {\r\n        id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: \"\",\r\n    },\r\n    isRegister: false,\r\n    commonError: \"\",\r\n    isUpdatedPassword: false,\r\n    fogot: false,\r\n    isInitialized: false,\r\n    updatedUser: {\r\n        name: \"\",\r\n        avatar: \"\",\r\n    },\r\n}\r\n//\r\n//\r\nexport const authReducer = (\r\n    state: initStateType = initState,\r\n    action: ActionType\r\n): initStateType => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return { ...state, isLogged: action.value }\r\n        case SET_USER:\r\n            return { ...state, user: action.user }\r\n        case SWITCH_IS_REGISTR:\r\n            return { ...state, isRegister: action.newValueIsRegister }\r\n        case SET_ERROR_REGISTR:\r\n            return { ...state, commonError: action.error }\r\n        case SET_UPDATE_USER:\r\n            return { ...state, updatedUser: action.data }\r\n        case IS_INITIALIZED:\r\n            return { ...state, isInitialized: action.value }\r\n        case SET_NEW_PASSWORD:\r\n            return { ...state, isUpdatedPassword: action.isUpPassword }\r\n        case SWITCH_FOGOT:\r\n            return { ...state, fogot: action.newFogot }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n//\r\n//\r\nconst SWITCH_IS_REGISTR = \"AUTH/SWITCH-IS-REGISTR\"\r\nconst SET_ERROR_REGISTR = \"AUTH/SET-ERROR-REGISTR\"\r\nconst SET_USER = \"AUTH/SET-USER\"\r\nconst SIGN_IN = \"AUTH/SIGN-IN\"\r\nconst SET_UPDATE_USER = \"AUTH/SET-UPDATE-USER\"\r\nconst SET_NEW_PASSWORD = \"AUTH/SET-NEW-PASSWORD\"\r\nconst SWITCH_FOGOT = \"AUTH/SWITCH-FOGOT\"\r\nconst IS_INITIALIZED = \"IS-INITIALIZED\"\r\n//\r\n//\r\nexport const switchIsRegister = (newValueIsRegister: boolean) => {\r\n    return { type: SWITCH_IS_REGISTR, newValueIsRegister } as const\r\n}\r\nexport const setCommonRegister = (error: any) => ({ type: SET_ERROR_REGISTR, error } as const)\r\n\r\nexport const logIn = (value: boolean) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        value,\r\n    } as const\r\n}\r\nexport const setUser = (id: string, email: string, name: string, avatar: string) => {\r\n    return {\r\n        type: SET_USER,\r\n        user: { id, email, name, avatar },\r\n    } as const\r\n}\r\nexport const setUpdateUser = (data: NewUserType) => {\r\n    return {\r\n        type: SET_UPDATE_USER,\r\n        data,\r\n    } as const\r\n}\r\nexport const setNewPassword = (isUpPassword: boolean) =>\r\n    ({\r\n        type: SET_NEW_PASSWORD,\r\n        isUpPassword,\r\n    } as const)\r\nexport const isInitialized = (value: boolean) => {\r\n    return {\r\n        type: IS_INITIALIZED,\r\n        value,\r\n    } as const\r\n}\r\nexport const switchFogot = (newFogot: boolean) => ({ type: SWITCH_FOGOT, newFogot } as const)\r\n//\r\n//\r\nexport const signUpTC = (email: string, password: string) => {\r\n    const signUpData = { email, password }\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        authAPI\r\n            .signUp(signUpData)\r\n            .then((resp) => {\r\n                if (resp.data.addedUser) {\r\n                    dispatch(switchIsRegister(true))\r\n                } else {\r\n                    dispatch(setCommonRegister(resp.data.error))\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                dispatch(setCommonRegister(\"Common error\"))\r\n            })\r\n    }\r\n}\r\n\r\nexport const LoginTC =\r\n    (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionType>) => {\r\n        authAPI\r\n            .login(email, password, rememberMe)\r\n            .then((res) => {\r\n                dispatch(logIn(true))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n                console.log(\"Error:\", { ...e })\r\n                dispatch(setCommonRegister(error))\r\n            })\r\n            .finally(() => {})\r\n    }\r\nexport const LogoutTC = () => (dispatch: Dispatch) => {\r\n    authAPI\r\n        .logout()\r\n        .then((res) => {\r\n            if (res.data.info) {\r\n                dispatch(logIn(false))\r\n            }\r\n        })\r\n        .catch((e) => {\r\n            const error = e.res ? e.res.data.error : e.message + \", more details in the console\"\r\n            console.log(\"Error:\", { ...e })\r\n            dispatch(setCommonRegister(error))\r\n        })\r\n}\r\nexport const GetUserTC = () => (dispatch: Dispatch<setUserType>) => {\r\n    authAPI.getProfile().then((res) => {\r\n        let { id, email, name, avatar } = res.data\r\n        dispatch(setUser(id, email, name, avatar))\r\n    })\r\n}\r\nexport const UpdateUserInfo = (data: NewUserType) => (dispatch: Dispatch) => {\r\n    authAPI\r\n        .updateUser(data)\r\n        .then((res) => {\r\n            dispatch(setUpdateUser(data))\r\n        })\r\n        .finally(() => {\r\n            console.log(\"check profile\")\r\n        })\r\n}\r\nexport const isInitializedTC = () => (dispatch: Dispatch) => {\r\n    authAPI\r\n        .getProfile()\r\n        .then((res) => {\r\n            dispatch(logIn(true))\r\n        })\r\n        .catch(() => {})\r\n        .finally(() => {\r\n            dispatch(isInitialized(true))\r\n        })\r\n}\r\nexport const forgot = (email: string, message: string) => (dispatch: Dispatch) => {\r\n    authAPI.forgot(email, message).then((res) => {\r\n        dispatch(switchFogot(true))\r\n    })\r\n}\r\nexport const SetNewPassword =\r\n    (newPassword: string, resetPasswordToken: string) => (dispatch: Dispatch) => {\r\n        authAPI.setNewPassword(newPassword, resetPasswordToken).then((res) => {\r\n            if (res.data.error.length === 0) {\r\n                dispatch(setNewPassword(true))\r\n            } else {\r\n                dispatch(setCommonRegister(res.data.error))\r\n            }\r\n        })\r\n    }\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../n1-main/a2-bll/store/store\";\r\nimport {GetUserTC} from \"../../n1-main/a2-bll/store/mainAuthReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../n1-main/a1-ui/routes/Routes\";\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const userName = useSelector<AppRootStateType, string>(state => state.auth.user.name)\r\n    const userEmail = useSelector<AppRootStateType, string>(state => state.auth.user.email)\r\n    const userAvatar = useSelector<AppRootStateType, string | undefined>(state => state.auth.user.avatar)\r\n    const isLogged = useSelector<AppRootStateType, boolean>(state => state.auth.isLogged)\r\n    useEffect(()=>{\r\n        dispatch(GetUserTC())\r\n    },[dispatch])\r\n\r\n    if (!isLogged) {\r\n        return <Redirect to={PATH.SIGN_IN}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={userAvatar} alt=\"\"/>\r\n            </div>\r\n            <div>\r\n                {userName}\r\n            </div>\r\n            <div>\r\n                {userEmail}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react'\r\n\r\nconst Error = () => {\r\n\r\n    return(\r\n        <div>\r\n            <h1>\r\n\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Error","import { useFormik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { PATH } from \"../../../n1-main/a1-ui/routes/Routes\"\r\nimport { forgot } from \"../../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport SuperInputText from \"../../../n3-MySuperComponents/SuperInputText/SuperInputText\"\r\nimport styles from \"../../../utils/styles/CommonStylesForAuth.module.css\"\r\n\r\nconst RenewalPass = () => {\r\n    const message = `<div style=\"background-color: lime; padding: 15px\"> \r\n    password recovery link: <a href='https://Tengrix.github.io/fridayproject/#/new-pass/$token$'>Click to here</a></div>`\r\n    const fogot = useSelector<AppRootStateType, boolean>((state) => state.auth.fogot)\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n        },\r\n        validate: (values) => {},\r\n        onSubmit: (values) => {\r\n            dispatch(forgot(values.email, message))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    return (\r\n        <div className={styles.authBlock}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <input\r\n                    placeholder=\"email\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                <button type=\"submit\">Enter</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default RenewalPass\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.default}${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >LogIn </button>\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\"\r\nimport SuperButton from \"../../../n3-MySuperComponents/SuperButton/SuperButton\"\r\nimport SuperInputText from \"../../../n3-MySuperComponents/SuperInputText/SuperInputText\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { LoginTC } from \"../../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport SuperCheckbox from \"../../../n3-MySuperComponents/SuperCheckbox/SuperCheckbox\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport { NavLink, Redirect } from \"react-router-dom\"\r\nimport { PATH } from \"../../../n1-main/a1-ui/routes/Routes\"\r\nimport { useFormik } from \"formik\"\r\nimport styles from \"../../../utils/styles/CommonStylesForAuth.module.css\"\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nconst SignInWithFormik = () => {\r\n    const dispatch = useDispatch()\r\n    const isLogged = useSelector<AppRootStateType, boolean>((state) => state.auth.isLogged)\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = \"Email required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            } else if (values.password.length < 4) {\r\n                errors.password = \"Invalid password\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(LoginTC(values.email, values.password, values.rememberMe))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    if (isLogged) {\r\n        return <Redirect to={PATH.PROFILE} />\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={styles.authBlock}>\r\n            <div className={styles.inputBlock}>\r\n                <div>\r\n                    <SuperInputText\r\n                        placeholder={\"Username or email\"}\r\n                        type={\"email\"}\r\n                        {...formik.getFieldProps(\"email\")}\r\n                    />\r\n                </div>\r\n                {formik.touched.email && formik.errors.email && (\r\n                    <div style={{ color: \"red\" }}>{formik.errors.email}</div>\r\n                )}\r\n\r\n                <div>\r\n                    <SuperInputText\r\n                        placeholder={\"password\"}\r\n                        type={\"password\"}\r\n                        {...formik.getFieldProps(\"password\")}\r\n                    />\r\n                </div>\r\n                {formik.touched.password && formik.errors.password && (\r\n                    <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n                )}\r\n                <div>\r\n                    <SuperCheckbox type={\"rememberMe\"} {...formik.getFieldProps(\"rememberMe\")} />\r\n                </div>\r\n\r\n                <SuperButton type={\"submit\"}>Sign in HERE</SuperButton>\r\n                <div>\r\n                    <NavLink to={PATH.RENEWAL_PASS}>Forgot password</NavLink>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default SignInWithFormik\r\n","import { useFormik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {  Redirect } from \"react-router-dom\"\r\nimport { signUpTC } from \"../../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport styles from \"../../../utils/styles/CommonStylesForAuth.module.css\"\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confPass?: string\r\n}\r\n\r\nconst SignUp = () => {\r\n    const isRegister = useSelector<AppRootStateType, boolean>((state) => state.auth.isRegister)\r\n    const commonError = useSelector<AppRootStateType, string>((state) => state.auth.commonError)\r\n    const dispatch = useDispatch()\r\n    const sendDataToRegister = (email: string, password: string) => {\r\n        dispatch(signUpTC(email, password))\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            confPass: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = \"Email required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            } else if (values.password.length < 7) {\r\n                errors.password = \"Password should be longer 7 symbols\"\r\n            }\r\n            if (values.password !== values.confPass) {\r\n                errors.password = \"Password not identical\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            formik.resetForm()\r\n            sendDataToRegister(values.email, values.password)\r\n        },\r\n    })\r\n    if (isRegister) {\r\n        return <Redirect to={\"/sign-in\"} />\r\n    }\r\n    return (\r\n        <div className={styles.authBlock}>\r\n            <form className={styles.inputBlock} onSubmit={formik.handleSubmit}>\r\n                <input\r\n                    placeholder=\"email:\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                {formik.errors.email && <div style={{ color: \"red\" }}>{formik.errors.email}</div>}\r\n                <input\r\n                    placeholder=\"password:\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n                <input\r\n                    placeholder=\"confirm password:\"\r\n                    name=\"confPass\"\r\n                    type=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.confPass}\r\n                />\r\n                {formik.errors.password && (\r\n                    <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n                )}\r\n                <button type={\"submit\"}>Sign up</button>\r\n\r\n                <div style={{ color: \"red\" }}>{commonError}</div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default SignUp\r\n","import { useFormik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect, useParams } from \"react-router-dom\"\r\nimport { SetNewPassword } from \"../../../n1-main/a2-bll/store/mainAuthReducer\"\r\nimport { AppRootStateType } from \"../../../n1-main/a2-bll/store/store\"\r\nimport styles from \"../../../utils/styles/CommonStylesForAuth.module.css\"\r\n\r\ntype FormikErrorType = {\r\n    password?: string\r\n    confPass?: string\r\n}\r\n\r\nconst NewPass = () => {\r\n    const isUpdatedPassword = useSelector<AppRootStateType, boolean>(\r\n        (state) => state.auth.isUpdatedPassword\r\n    )\r\n    const commonError = useSelector<AppRootStateType, string>((state) => state.auth.commonError)\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{ token: string }>()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: \"\",\r\n            confPass: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (values.password.length < 7) {\r\n                errors.password = \"Password should be longer 7 symbols\"\r\n            }\r\n            if (values.password !== values.confPass) {\r\n                errors.password = \"Password not identical\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(SetNewPassword(values.password, token))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    if (isUpdatedPassword) {\r\n        return <Redirect to={\"/sign-in\"} />\r\n    }\r\n    return (\r\n        <div className={styles.authBlock}>\r\n            <form onSubmit={formik.handleSubmit} className={styles.inputBlock}>\r\n                <input\r\n                    placeholder=\"password:\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n                <input\r\n                    placeholder=\"confirm password:\"\r\n                    name=\"confPass\"\r\n                    type=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.confPass}\r\n                />\r\n                {formik.errors.password && (\r\n                    <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n                )}\r\n                <button type={\"submit\"}>Change password</button>\r\n                <div style={{ color: \"red\" }}>{commonError}</div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default NewPass\r\n","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../n1-main/a2-bll/store/store\";\r\nimport {UpdateUserInfo} from \"../../n1-main/a2-bll/store/mainAuthReducer\";\r\nimport {NewUserType} from \"../../n1-main/a3-dal/mainAPI\";\r\n\r\nconst UpdateProfile = () => {\r\n    const dispatch = useDispatch()\r\n    const oldName = useSelector<AppRootStateType,string>(state => state.auth.user.name)\r\n    const oldAva = useSelector<AppRootStateType,string>(state => state.auth.user.avatar)\r\n    const[name, setNewName] = useState<string>(oldName)\r\n    const[avatar, setNewAva] = useState<string>(oldAva)\r\n    const newData:NewUserType = {name,avatar}\r\n    const changeName = () => {\r\n        dispatch(UpdateUserInfo(newData))\r\n    }\r\n    const onChangeName = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        setNewName(e.currentTarget.value)\r\n    }\r\n    const onChangeAva = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        setNewAva(e.currentTarget.value)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input placeholder={'new name'} value={name} type=\"text\" onChange={onChangeName}/>\r\n            <input placeholder={'new URL for Ava'} value={avatar} type=\"text\" onChange={onChangeAva}/>\r\n            <button onClick={changeName}>Submit</button>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateProfile","import {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Profile from \"../../../n2-features/profile/Profile\";\r\nimport Error from \"../../../n2-features/b4-errors/error/Error\";\r\nimport React from \"react\";\r\nimport RenewalPass from \"../../../n2-features/b3-pass/Password/RenewalPass\";\r\nimport SignInWithFormik from \"../../../n2-features/b2-auth/sign-in-up/SignIn\";\r\nimport SignUp from \"../../../n2-features/b2-auth/sign-in-up/SignUp\";\r\nimport NewPass from \"../../../n2-features/b3-pass/Password/NewPass\";\r\nimport UpdateProfile from \"../../../n2-features/profile/UpdateProfile\";\r\n\r\nexport const PATH = {\r\n    PROFILE:'/profile',\r\n    SIGN_IN:'/sign-in',\r\n    SIGN_UP:'/sign-up',\r\n    NEW_PASS:'/new-pass',\r\n    RENEWAL_PASS:'/renewal-pass',\r\n    ERROR:'/404',\r\n    UPDATE_USER:'/update-user'\r\n\r\n}\r\nexport const Routes = () => {\r\n\r\n    return(\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact component={Profile}/>\r\n                <Route path={PATH.PROFILE} component={Profile}/>\r\n                <Route path={PATH.PROFILE} component={Error}/>\r\n                <Route path={PATH.SIGN_IN} component={SignInWithFormik}/>\r\n                <Route path={PATH.SIGN_UP} component={SignUp}/>\r\n                <Route path={PATH.NEW_PASS} component={NewPass}/>\r\n                <Route path={PATH.RENEWAL_PASS} component={RenewalPass}/>\r\n                <Route path={PATH.UPDATE_USER} component={UpdateProfile}/>\r\n                <Route path={'/404'} render={() => <h1>404:PAGE NOT FOUND</h1>}/>\r\n                <Redirect from={'*'} to={PATH.ERROR}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React, { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { LogoutTC } from '../../../n1-main/a2-bll/store/mainAuthReducer';\r\nconst Logout = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(LogoutTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={logoutHandler}>Logout</button>\r\n            Logout in Here\r\n        </div>\r\n    )\r\n}\r\nexport default Logout","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport {PATH} from \"../routes/Routes\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../a2-bll/store/store\";\r\nimport Logout from \"../../../n2-features/b2-auth/sign-in-up/Logout\";\r\n\r\nfunction Header() {\r\n    const isLogged = useSelector<AppRootStateType, boolean>(state => state.auth.isLogged)\r\n    return (\r\n        <nav className={s.nav}>\r\n            <span className={s.logOut}>\r\n                {isLogged && <Logout/>}\r\n            </span>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.UPDATE_USER} activeClassName={s.activeLink} replace> Settings </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PROFILE} activeClassName={s.activeLink} replace> My Profile </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.SIGN_IN} activeClassName={s.activeLink} replace>sign-in</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.SIGN_UP} activeClassName={s.activeLink} replace>sign-up</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.NEW_PASS} activeClassName={s.activeLink} replace>new Pass</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.RENEWAL_PASS} activeClassName={s.activeLink} replace>Get the new Pass</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {useEffect} from 'react';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport './App.css';\r\nimport {Routes} from \"./routes/Routes\";\r\nimport Header from \"./header/Header\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../a2-bll/store/store\";\r\nimport { isInitializedTC} from \"../a2-bll/store/mainAuthReducer\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useSelector<AppRootStateType,boolean>(state => state.auth.isInitialized)\r\n    useEffect(()=>{\r\n        dispatch(isInitializedTC())\r\n    },[])\r\n\r\n    if(!isInitialized){\r\n        return <div>Loading</div>\r\n    }\r\n    return (\r\n        <HashRouter>\r\n            <div className={'mainPage'}>\r\n                <Header/>\r\n                <Routes/>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers,createStore} from 'redux';\r\nimport {authReducer} from \"./mainAuthReducer\";\r\nimport thunk from \"redux-thunk\";\r\ndeclare global {\r\n    interface Window {store: any}\r\n}\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer\r\n})\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\nwindow.store = store\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './n1-main/a1-ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./n1-main/a2-bll/store/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__1BzxD\",\"item\":\"Header_item__1Kwze\",\"activeLink\":\"Header_activeLink__DiCTj\",\"logOut\":\"Header_logOut__21oX-\"};"],"sourceRoot":""}